-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_TVALID : OUT STD_LOGIC;
    res_V_data_0_V_TREADY : IN STD_LOGIC;
    res_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TREADY : IN STD_LOGIC;
    res_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_TVALID : OUT STD_LOGIC;
    res_V_data_2_V_TREADY : IN STD_LOGIC;
    res_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_TVALID : OUT STD_LOGIC;
    res_V_data_3_V_TREADY : IN STD_LOGIC );
end;


architecture behav of softmax_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal res_V_data_0_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_0_V_1_vld_in : STD_LOGIC;
    signal res_V_data_0_V_1_vld_out : STD_LOGIC;
    signal res_V_data_0_V_1_ack_in : STD_LOGIC;
    signal res_V_data_0_V_1_ack_out : STD_LOGIC;
    signal res_V_data_0_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_0_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_0_V_1_sel_rd : STD_LOGIC := '0';
    signal res_V_data_0_V_1_sel_wr : STD_LOGIC := '0';
    signal res_V_data_0_V_1_sel : STD_LOGIC;
    signal res_V_data_0_V_1_load_A : STD_LOGIC;
    signal res_V_data_0_V_1_load_B : STD_LOGIC;
    signal res_V_data_0_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal res_V_data_0_V_1_state_cmp_full : STD_LOGIC;
    signal res_V_data_1_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_1_V_1_vld_in : STD_LOGIC;
    signal res_V_data_1_V_1_vld_out : STD_LOGIC;
    signal res_V_data_1_V_1_ack_in : STD_LOGIC;
    signal res_V_data_1_V_1_ack_out : STD_LOGIC;
    signal res_V_data_1_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_1_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_1_V_1_sel_rd : STD_LOGIC := '0';
    signal res_V_data_1_V_1_sel_wr : STD_LOGIC := '0';
    signal res_V_data_1_V_1_sel : STD_LOGIC;
    signal res_V_data_1_V_1_load_A : STD_LOGIC;
    signal res_V_data_1_V_1_load_B : STD_LOGIC;
    signal res_V_data_1_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal res_V_data_1_V_1_state_cmp_full : STD_LOGIC;
    signal res_V_data_2_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_2_V_1_vld_in : STD_LOGIC;
    signal res_V_data_2_V_1_vld_out : STD_LOGIC;
    signal res_V_data_2_V_1_ack_in : STD_LOGIC;
    signal res_V_data_2_V_1_ack_out : STD_LOGIC;
    signal res_V_data_2_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_2_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_2_V_1_sel_rd : STD_LOGIC := '0';
    signal res_V_data_2_V_1_sel_wr : STD_LOGIC := '0';
    signal res_V_data_2_V_1_sel : STD_LOGIC;
    signal res_V_data_2_V_1_load_A : STD_LOGIC;
    signal res_V_data_2_V_1_load_B : STD_LOGIC;
    signal res_V_data_2_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal res_V_data_2_V_1_state_cmp_full : STD_LOGIC;
    signal res_V_data_3_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_3_V_1_vld_in : STD_LOGIC;
    signal res_V_data_3_V_1_vld_out : STD_LOGIC;
    signal res_V_data_3_V_1_ack_in : STD_LOGIC;
    signal res_V_data_3_V_1_ack_out : STD_LOGIC;
    signal res_V_data_3_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_3_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_3_V_1_sel_rd : STD_LOGIC := '0';
    signal res_V_data_3_V_1_sel_wr : STD_LOGIC := '0';
    signal res_V_data_3_V_1_sel : STD_LOGIC;
    signal res_V_data_3_V_1_load_A : STD_LOGIC;
    signal res_V_data_3_V_1_load_B : STD_LOGIC;
    signal res_V_data_3_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal res_V_data_3_V_1_state_cmp_full : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n : STD_LOGIC;
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_0_V_TDATA_blk_n : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_1_V_TDATA_blk_n : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_2_V_TDATA_blk_n : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_3_V_TDATA_blk_n : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_start : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_done : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_idle : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_ready : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TREADY : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_read : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_read : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_read : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_read : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TVALID : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TVALID : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TREADY : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TVALID : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TREADY : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TVALID : STD_LOGIC;
    signal grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TREADY : STD_LOGIC;
    signal ap_block_state1_ignore_call8 : BOOLEAN;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_block_state21 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state20 : BOOLEAN;

    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        res_V_data_0_V_TREADY : IN STD_LOGIC;
        data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        data_V_data_0_V_empty_n : IN STD_LOGIC;
        data_V_data_0_V_read : OUT STD_LOGIC;
        data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        data_V_data_1_V_empty_n : IN STD_LOGIC;
        data_V_data_1_V_read : OUT STD_LOGIC;
        data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        data_V_data_2_V_empty_n : IN STD_LOGIC;
        data_V_data_2_V_read : OUT STD_LOGIC;
        data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        data_V_data_3_V_empty_n : IN STD_LOGIC;
        data_V_data_3_V_read : OUT STD_LOGIC;
        res_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_V_data_0_V_TVALID : OUT STD_LOGIC;
        res_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_V_data_1_V_TVALID : OUT STD_LOGIC;
        res_V_data_1_V_TREADY : IN STD_LOGIC;
        res_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_V_data_2_V_TVALID : OUT STD_LOGIC;
        res_V_data_2_V_TREADY : IN STD_LOGIC;
        res_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_V_data_3_V_TVALID : OUT STD_LOGIC;
        res_V_data_3_V_TREADY : IN STD_LOGIC;
        data_V_data_0_V_blk_n : OUT STD_LOGIC;
        data_V_data_1_V_blk_n : OUT STD_LOGIC;
        data_V_data_2_V_blk_n : OUT STD_LOGIC;
        data_V_data_3_V_blk_n : OUT STD_LOGIC;
        res_V_data_0_V_TDATA_blk_n : OUT STD_LOGIC;
        res_V_data_1_V_TDATA_blk_n : OUT STD_LOGIC;
        res_V_data_2_V_TDATA_blk_n : OUT STD_LOGIC;
        res_V_data_3_V_TDATA_blk_n : OUT STD_LOGIC );
    end component;



begin
    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88 : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_start,
        ap_done => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_done,
        ap_idle => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_idle,
        ap_ready => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_ready,
        res_V_data_0_V_TREADY => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TREADY,
        data_V_data_0_V_dout => data_V_data_0_V_dout,
        data_V_data_0_V_empty_n => data_V_data_0_V_empty_n,
        data_V_data_0_V_read => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_read,
        data_V_data_1_V_dout => data_V_data_1_V_dout,
        data_V_data_1_V_empty_n => data_V_data_1_V_empty_n,
        data_V_data_1_V_read => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_read,
        data_V_data_2_V_dout => data_V_data_2_V_dout,
        data_V_data_2_V_empty_n => data_V_data_2_V_empty_n,
        data_V_data_2_V_read => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_read,
        data_V_data_3_V_dout => data_V_data_3_V_dout,
        data_V_data_3_V_empty_n => data_V_data_3_V_empty_n,
        data_V_data_3_V_read => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_read,
        res_V_data_0_V_TDATA => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA,
        res_V_data_0_V_TVALID => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TVALID,
        res_V_data_1_V_TDATA => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA,
        res_V_data_1_V_TVALID => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TVALID,
        res_V_data_1_V_TREADY => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TREADY,
        res_V_data_2_V_TDATA => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA,
        res_V_data_2_V_TVALID => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TVALID,
        res_V_data_2_V_TREADY => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TREADY,
        res_V_data_3_V_TDATA => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA,
        res_V_data_3_V_TVALID => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TVALID,
        res_V_data_3_V_TREADY => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TREADY,
        data_V_data_0_V_blk_n => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n,
        data_V_data_1_V_blk_n => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n,
        data_V_data_2_V_blk_n => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n,
        data_V_data_3_V_blk_n => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n,
        res_V_data_0_V_TDATA_blk_n => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n,
        res_V_data_1_V_TDATA_blk_n => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n,
        res_V_data_2_V_TDATA_blk_n => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n,
        res_V_data_3_V_TDATA_blk_n => grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((res_V_data_0_V_1_ack_in = ap_const_logic_0) or (res_V_data_3_V_1_ack_in = ap_const_logic_0) or (res_V_data_2_V_1_ack_in = ap_const_logic_0) or (res_V_data_1_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    res_V_data_0_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_0_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((res_V_data_0_V_1_ack_out = ap_const_logic_1) and (res_V_data_0_V_1_vld_out = ap_const_logic_1))) then 
                                        res_V_data_0_V_1_sel_rd <= not(res_V_data_0_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    res_V_data_0_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_0_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((res_V_data_0_V_1_ack_in = ap_const_logic_1) and (res_V_data_0_V_1_vld_in = ap_const_logic_1))) then 
                                        res_V_data_0_V_1_sel_wr <= not(res_V_data_0_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    res_V_data_0_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_0_V_1_state <= ap_const_lv2_0;
            else
                if ((((res_V_data_0_V_1_state = ap_const_lv2_2) and (res_V_data_0_V_1_vld_in = ap_const_logic_0)) or ((res_V_data_0_V_1_state = ap_const_lv2_3) and (res_V_data_0_V_1_vld_in = ap_const_logic_0) and (res_V_data_0_V_1_ack_out = ap_const_logic_1)))) then 
                    res_V_data_0_V_1_state <= ap_const_lv2_2;
                elsif ((((res_V_data_0_V_1_state = ap_const_lv2_1) and (res_V_data_0_V_1_ack_out = ap_const_logic_0)) or ((res_V_data_0_V_1_state = ap_const_lv2_3) and (res_V_data_0_V_1_ack_out = ap_const_logic_0) and (res_V_data_0_V_1_vld_in = ap_const_logic_1)))) then 
                    res_V_data_0_V_1_state <= ap_const_lv2_1;
                elsif (((not(((res_V_data_0_V_1_ack_out = ap_const_logic_0) and (res_V_data_0_V_1_vld_in = ap_const_logic_1))) and not(((res_V_data_0_V_1_vld_in = ap_const_logic_0) and (res_V_data_0_V_1_ack_out = ap_const_logic_1))) and (res_V_data_0_V_1_state = ap_const_lv2_3)) or ((res_V_data_0_V_1_state = ap_const_lv2_1) and (res_V_data_0_V_1_ack_out = ap_const_logic_1)) or ((res_V_data_0_V_1_state = ap_const_lv2_2) and (res_V_data_0_V_1_vld_in = ap_const_logic_1)))) then 
                    res_V_data_0_V_1_state <= ap_const_lv2_3;
                else 
                    res_V_data_0_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    res_V_data_1_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_1_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((res_V_data_1_V_1_ack_out = ap_const_logic_1) and (res_V_data_1_V_1_vld_out = ap_const_logic_1))) then 
                                        res_V_data_1_V_1_sel_rd <= not(res_V_data_1_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    res_V_data_1_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_1_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((res_V_data_1_V_1_ack_in = ap_const_logic_1) and (res_V_data_1_V_1_vld_in = ap_const_logic_1))) then 
                                        res_V_data_1_V_1_sel_wr <= not(res_V_data_1_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    res_V_data_1_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_1_V_1_state <= ap_const_lv2_0;
            else
                if ((((res_V_data_1_V_1_state = ap_const_lv2_2) and (res_V_data_1_V_1_vld_in = ap_const_logic_0)) or ((res_V_data_1_V_1_state = ap_const_lv2_3) and (res_V_data_1_V_1_vld_in = ap_const_logic_0) and (res_V_data_1_V_1_ack_out = ap_const_logic_1)))) then 
                    res_V_data_1_V_1_state <= ap_const_lv2_2;
                elsif ((((res_V_data_1_V_1_state = ap_const_lv2_1) and (res_V_data_1_V_1_ack_out = ap_const_logic_0)) or ((res_V_data_1_V_1_state = ap_const_lv2_3) and (res_V_data_1_V_1_ack_out = ap_const_logic_0) and (res_V_data_1_V_1_vld_in = ap_const_logic_1)))) then 
                    res_V_data_1_V_1_state <= ap_const_lv2_1;
                elsif (((not(((res_V_data_1_V_1_vld_in = ap_const_logic_0) and (res_V_data_1_V_1_ack_out = ap_const_logic_1))) and not(((res_V_data_1_V_1_ack_out = ap_const_logic_0) and (res_V_data_1_V_1_vld_in = ap_const_logic_1))) and (res_V_data_1_V_1_state = ap_const_lv2_3)) or ((res_V_data_1_V_1_state = ap_const_lv2_1) and (res_V_data_1_V_1_ack_out = ap_const_logic_1)) or ((res_V_data_1_V_1_state = ap_const_lv2_2) and (res_V_data_1_V_1_vld_in = ap_const_logic_1)))) then 
                    res_V_data_1_V_1_state <= ap_const_lv2_3;
                else 
                    res_V_data_1_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    res_V_data_2_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_2_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((res_V_data_2_V_1_ack_out = ap_const_logic_1) and (res_V_data_2_V_1_vld_out = ap_const_logic_1))) then 
                                        res_V_data_2_V_1_sel_rd <= not(res_V_data_2_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    res_V_data_2_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_2_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((res_V_data_2_V_1_ack_in = ap_const_logic_1) and (res_V_data_2_V_1_vld_in = ap_const_logic_1))) then 
                                        res_V_data_2_V_1_sel_wr <= not(res_V_data_2_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    res_V_data_2_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_2_V_1_state <= ap_const_lv2_0;
            else
                if ((((res_V_data_2_V_1_state = ap_const_lv2_2) and (res_V_data_2_V_1_vld_in = ap_const_logic_0)) or ((res_V_data_2_V_1_state = ap_const_lv2_3) and (res_V_data_2_V_1_vld_in = ap_const_logic_0) and (res_V_data_2_V_1_ack_out = ap_const_logic_1)))) then 
                    res_V_data_2_V_1_state <= ap_const_lv2_2;
                elsif ((((res_V_data_2_V_1_state = ap_const_lv2_1) and (res_V_data_2_V_1_ack_out = ap_const_logic_0)) or ((res_V_data_2_V_1_state = ap_const_lv2_3) and (res_V_data_2_V_1_ack_out = ap_const_logic_0) and (res_V_data_2_V_1_vld_in = ap_const_logic_1)))) then 
                    res_V_data_2_V_1_state <= ap_const_lv2_1;
                elsif (((not(((res_V_data_2_V_1_vld_in = ap_const_logic_0) and (res_V_data_2_V_1_ack_out = ap_const_logic_1))) and not(((res_V_data_2_V_1_ack_out = ap_const_logic_0) and (res_V_data_2_V_1_vld_in = ap_const_logic_1))) and (res_V_data_2_V_1_state = ap_const_lv2_3)) or ((res_V_data_2_V_1_state = ap_const_lv2_1) and (res_V_data_2_V_1_ack_out = ap_const_logic_1)) or ((res_V_data_2_V_1_state = ap_const_lv2_2) and (res_V_data_2_V_1_vld_in = ap_const_logic_1)))) then 
                    res_V_data_2_V_1_state <= ap_const_lv2_3;
                else 
                    res_V_data_2_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    res_V_data_3_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_3_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((res_V_data_3_V_1_ack_out = ap_const_logic_1) and (res_V_data_3_V_1_vld_out = ap_const_logic_1))) then 
                                        res_V_data_3_V_1_sel_rd <= not(res_V_data_3_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    res_V_data_3_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_3_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((res_V_data_3_V_1_ack_in = ap_const_logic_1) and (res_V_data_3_V_1_vld_in = ap_const_logic_1))) then 
                                        res_V_data_3_V_1_sel_wr <= not(res_V_data_3_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    res_V_data_3_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                res_V_data_3_V_1_state <= ap_const_lv2_0;
            else
                if ((((res_V_data_3_V_1_state = ap_const_lv2_2) and (res_V_data_3_V_1_vld_in = ap_const_logic_0)) or ((res_V_data_3_V_1_state = ap_const_lv2_3) and (res_V_data_3_V_1_vld_in = ap_const_logic_0) and (res_V_data_3_V_1_ack_out = ap_const_logic_1)))) then 
                    res_V_data_3_V_1_state <= ap_const_lv2_2;
                elsif ((((res_V_data_3_V_1_state = ap_const_lv2_1) and (res_V_data_3_V_1_ack_out = ap_const_logic_0)) or ((res_V_data_3_V_1_state = ap_const_lv2_3) and (res_V_data_3_V_1_ack_out = ap_const_logic_0) and (res_V_data_3_V_1_vld_in = ap_const_logic_1)))) then 
                    res_V_data_3_V_1_state <= ap_const_lv2_1;
                elsif (((not(((res_V_data_3_V_1_vld_in = ap_const_logic_0) and (res_V_data_3_V_1_ack_out = ap_const_logic_1))) and not(((res_V_data_3_V_1_ack_out = ap_const_logic_0) and (res_V_data_3_V_1_vld_in = ap_const_logic_1))) and (res_V_data_3_V_1_state = ap_const_lv2_3)) or ((res_V_data_3_V_1_state = ap_const_lv2_1) and (res_V_data_3_V_1_ack_out = ap_const_logic_1)) or ((res_V_data_3_V_1_state = ap_const_lv2_2) and (res_V_data_3_V_1_vld_in = ap_const_logic_1)))) then 
                    res_V_data_3_V_1_state <= ap_const_lv2_3;
                else 
                    res_V_data_3_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((res_V_data_0_V_1_load_A = ap_const_logic_1)) then
                res_V_data_0_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((res_V_data_0_V_1_load_B = ap_const_logic_1)) then
                res_V_data_0_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((res_V_data_1_V_1_load_A = ap_const_logic_1)) then
                res_V_data_1_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((res_V_data_1_V_1_load_B = ap_const_logic_1)) then
                res_V_data_1_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((res_V_data_2_V_1_load_A = ap_const_logic_1)) then
                res_V_data_2_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((res_V_data_2_V_1_load_B = ap_const_logic_1)) then
                res_V_data_2_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((res_V_data_3_V_1_load_A = ap_const_logic_1)) then
                res_V_data_3_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((res_V_data_3_V_1_load_B = ap_const_logic_1)) then
                res_V_data_3_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, res_V_data_0_V_1_ack_in, res_V_data_1_V_1_ack_in, res_V_data_2_V_1_ack_in, res_V_data_3_V_1_ack_in, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n, ap_CS_fsm_state20, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n, ap_CS_fsm_state21)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if ((not(((grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if ((not(((res_V_data_0_V_1_ack_in = ap_const_logic_0) or (res_V_data_3_V_1_ack_in = ap_const_logic_0) or (res_V_data_2_V_1_ack_in = ap_const_logic_0) or (res_V_data_1_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call8_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call8 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state20_assign_proc : process(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n)
    begin
                ap_block_state20 <= ((grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n = ap_const_logic_0) or (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n = ap_const_logic_0));
    end process;


    ap_block_state21_assign_proc : process(res_V_data_0_V_1_ack_in, res_V_data_1_V_1_ack_in, res_V_data_2_V_1_ack_in, res_V_data_3_V_1_ack_in)
    begin
                ap_block_state21 <= ((res_V_data_0_V_1_ack_in = ap_const_logic_0) or (res_V_data_3_V_1_ack_in = ap_const_logic_0) or (res_V_data_2_V_1_ack_in = ap_const_logic_0) or (res_V_data_1_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, res_V_data_0_V_1_ack_in, res_V_data_1_V_1_ack_in, res_V_data_2_V_1_ack_in, res_V_data_3_V_1_ack_in, ap_CS_fsm_state21)
    begin
        if ((not(((res_V_data_0_V_1_ack_in = ap_const_logic_0) or (res_V_data_3_V_1_ack_in = ap_const_logic_0) or (res_V_data_2_V_1_ack_in = ap_const_logic_0) or (res_V_data_1_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(res_V_data_0_V_1_ack_in, res_V_data_1_V_1_ack_in, res_V_data_2_V_1_ack_in, res_V_data_3_V_1_ack_in, ap_CS_fsm_state21)
    begin
        if ((not(((res_V_data_0_V_1_ack_in = ap_const_logic_0) or (res_V_data_3_V_1_ack_in = ap_const_logic_0) or (res_V_data_2_V_1_ack_in = ap_const_logic_0) or (res_V_data_1_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            data_V_data_0_V_blk_n <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_blk_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_state1, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            data_V_data_0_V_read <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_0_V_read;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state20, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            data_V_data_1_V_blk_n <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_blk_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_state1, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            data_V_data_1_V_read <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_1_V_read;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state20, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            data_V_data_2_V_blk_n <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_blk_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_state1, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            data_V_data_2_V_read <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_2_V_read;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state20, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            data_V_data_3_V_blk_n <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_blk_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_state1, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            data_V_data_3_V_read <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_data_V_data_3_V_read;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_start_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_start <= ap_const_logic_1;
        else 
            grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TREADY <= (res_V_data_0_V_1_ack_in and ap_CS_fsm_state20);
    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TREADY <= (res_V_data_1_V_1_ack_in and ap_CS_fsm_state20);
    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TREADY <= (res_V_data_2_V_1_ack_in and ap_CS_fsm_state20);
    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TREADY <= (res_V_data_3_V_1_ack_in and ap_CS_fsm_state20);
    res_V_data_0_V_1_ack_in <= res_V_data_0_V_1_state(1);
    res_V_data_0_V_1_ack_out <= res_V_data_0_V_TREADY;

    res_V_data_0_V_1_data_out_assign_proc : process(res_V_data_0_V_1_payload_A, res_V_data_0_V_1_payload_B, res_V_data_0_V_1_sel)
    begin
        if ((res_V_data_0_V_1_sel = ap_const_logic_1)) then 
            res_V_data_0_V_1_data_out <= res_V_data_0_V_1_payload_B;
        else 
            res_V_data_0_V_1_data_out <= res_V_data_0_V_1_payload_A;
        end if; 
    end process;

    res_V_data_0_V_1_load_A <= (res_V_data_0_V_1_state_cmp_full and not(res_V_data_0_V_1_sel_wr));
    res_V_data_0_V_1_load_B <= (res_V_data_0_V_1_state_cmp_full and res_V_data_0_V_1_sel_wr);
    res_V_data_0_V_1_sel <= res_V_data_0_V_1_sel_rd;
    res_V_data_0_V_1_state_cmp_full <= '0' when (res_V_data_0_V_1_state = ap_const_lv2_1) else '1';
    res_V_data_0_V_1_vld_in <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TVALID;
    res_V_data_0_V_1_vld_out <= res_V_data_0_V_1_state(0);
    res_V_data_0_V_TDATA <= res_V_data_0_V_1_data_out;

    res_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state20, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            res_V_data_0_V_TDATA_blk_n <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_0_V_TDATA_blk_n;
        else 
            res_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_TVALID <= res_V_data_0_V_1_state(0);
    res_V_data_1_V_1_ack_in <= res_V_data_1_V_1_state(1);
    res_V_data_1_V_1_ack_out <= res_V_data_1_V_TREADY;

    res_V_data_1_V_1_data_out_assign_proc : process(res_V_data_1_V_1_payload_A, res_V_data_1_V_1_payload_B, res_V_data_1_V_1_sel)
    begin
        if ((res_V_data_1_V_1_sel = ap_const_logic_1)) then 
            res_V_data_1_V_1_data_out <= res_V_data_1_V_1_payload_B;
        else 
            res_V_data_1_V_1_data_out <= res_V_data_1_V_1_payload_A;
        end if; 
    end process;

    res_V_data_1_V_1_load_A <= (res_V_data_1_V_1_state_cmp_full and not(res_V_data_1_V_1_sel_wr));
    res_V_data_1_V_1_load_B <= (res_V_data_1_V_1_state_cmp_full and res_V_data_1_V_1_sel_wr);
    res_V_data_1_V_1_sel <= res_V_data_1_V_1_sel_rd;
    res_V_data_1_V_1_state_cmp_full <= '0' when (res_V_data_1_V_1_state = ap_const_lv2_1) else '1';
    res_V_data_1_V_1_vld_in <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TVALID;
    res_V_data_1_V_1_vld_out <= res_V_data_1_V_1_state(0);
    res_V_data_1_V_TDATA <= res_V_data_1_V_1_data_out;

    res_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state20, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            res_V_data_1_V_TDATA_blk_n <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_1_V_TDATA_blk_n;
        else 
            res_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_TVALID <= res_V_data_1_V_1_state(0);
    res_V_data_2_V_1_ack_in <= res_V_data_2_V_1_state(1);
    res_V_data_2_V_1_ack_out <= res_V_data_2_V_TREADY;

    res_V_data_2_V_1_data_out_assign_proc : process(res_V_data_2_V_1_payload_A, res_V_data_2_V_1_payload_B, res_V_data_2_V_1_sel)
    begin
        if ((res_V_data_2_V_1_sel = ap_const_logic_1)) then 
            res_V_data_2_V_1_data_out <= res_V_data_2_V_1_payload_B;
        else 
            res_V_data_2_V_1_data_out <= res_V_data_2_V_1_payload_A;
        end if; 
    end process;

    res_V_data_2_V_1_load_A <= (res_V_data_2_V_1_state_cmp_full and not(res_V_data_2_V_1_sel_wr));
    res_V_data_2_V_1_load_B <= (res_V_data_2_V_1_state_cmp_full and res_V_data_2_V_1_sel_wr);
    res_V_data_2_V_1_sel <= res_V_data_2_V_1_sel_rd;
    res_V_data_2_V_1_state_cmp_full <= '0' when (res_V_data_2_V_1_state = ap_const_lv2_1) else '1';
    res_V_data_2_V_1_vld_in <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TVALID;
    res_V_data_2_V_1_vld_out <= res_V_data_2_V_1_state(0);
    res_V_data_2_V_TDATA <= res_V_data_2_V_1_data_out;

    res_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state20, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            res_V_data_2_V_TDATA_blk_n <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_2_V_TDATA_blk_n;
        else 
            res_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_TVALID <= res_V_data_2_V_1_state(0);
    res_V_data_3_V_1_ack_in <= res_V_data_3_V_1_state(1);
    res_V_data_3_V_1_ack_out <= res_V_data_3_V_TREADY;

    res_V_data_3_V_1_data_out_assign_proc : process(res_V_data_3_V_1_payload_A, res_V_data_3_V_1_payload_B, res_V_data_3_V_1_sel)
    begin
        if ((res_V_data_3_V_1_sel = ap_const_logic_1)) then 
            res_V_data_3_V_1_data_out <= res_V_data_3_V_1_payload_B;
        else 
            res_V_data_3_V_1_data_out <= res_V_data_3_V_1_payload_A;
        end if; 
    end process;

    res_V_data_3_V_1_load_A <= (res_V_data_3_V_1_state_cmp_full and not(res_V_data_3_V_1_sel_wr));
    res_V_data_3_V_1_load_B <= (res_V_data_3_V_1_state_cmp_full and res_V_data_3_V_1_sel_wr);
    res_V_data_3_V_1_sel <= res_V_data_3_V_1_sel_rd;
    res_V_data_3_V_1_state_cmp_full <= '0' when (res_V_data_3_V_1_state = ap_const_lv2_1) else '1';
    res_V_data_3_V_1_vld_in <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TVALID;
    res_V_data_3_V_1_vld_out <= res_V_data_3_V_1_state(0);
    res_V_data_3_V_TDATA <= res_V_data_3_V_1_data_out;

    res_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state20, grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            res_V_data_3_V_TDATA_blk_n <= grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_fu_88_res_V_data_3_V_TDATA_blk_n;
        else 
            res_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_TVALID <= res_V_data_3_V_1_state(0);
end behav;
