-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_V_TVALID : IN STD_LOGIC;
    data_V_data_V_TREADY : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv15_4B00 : STD_LOGIC_VECTOR (14 downto 0) := "100101100000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_0_vld_in : STD_LOGIC;
    signal data_V_data_V_0_vld_out : STD_LOGIC;
    signal data_V_data_V_0_ack_in : STD_LOGIC;
    signal data_V_data_V_0_ack_out : STD_LOGIC;
    signal data_V_data_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal data_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal data_V_data_V_0_sel : STD_LOGIC;
    signal data_V_data_V_0_load_A : STD_LOGIC;
    signal data_V_data_V_0_load_B : STD_LOGIC;
    signal data_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal data_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal data_V_data_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_next_fu_187_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal indvar_flatten_next_reg_196 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_done : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_idle : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_ready : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_write : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_write : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_write : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_write : STD_LOGIC;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_ce : STD_LOGIC;
    signal ap_block_state8 : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal indvar_flatten_reg_132 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_NS_fsm_state3 : STD_LOGIC;
    signal exitcond_flatten_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);

    component compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_stream_V_data_0_V_full_n : IN STD_LOGIC;
        res_stream_V_data_0_V_write : OUT STD_LOGIC;
        res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_stream_V_data_1_V_full_n : IN STD_LOGIC;
        res_stream_V_data_1_V_write : OUT STD_LOGIC;
        res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_stream_V_data_2_V_full_n : IN STD_LOGIC;
        res_stream_V_data_2_V_write : OUT STD_LOGIC;
        res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_stream_V_data_3_V_full_n : IN STD_LOGIC;
        res_stream_V_data_3_V_write : OUT STD_LOGIC;
        res_stream_V_data_0_V_blk_n : OUT STD_LOGIC;
        res_stream_V_data_1_V_blk_n : OUT STD_LOGIC;
        res_stream_V_data_2_V_blk_n : OUT STD_LOGIC;
        res_stream_V_data_3_V_blk_n : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143 : component compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start,
        ap_done => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_done,
        ap_idle => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_idle,
        ap_ready => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_ready,
        in_elem_data_V_read => data_V_data_V_0_data_out,
        res_stream_V_data_0_V_din => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n => res_V_data_0_V_full_n,
        res_stream_V_data_0_V_write => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n => res_V_data_1_V_full_n,
        res_stream_V_data_1_V_write => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n => res_V_data_2_V_full_n,
        res_stream_V_data_2_V_write => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n => res_V_data_3_V_full_n,
        res_stream_V_data_3_V_write => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_write,
        res_stream_V_data_0_V_blk_n => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n,
        res_stream_V_data_1_V_blk_n => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n,
        res_stream_V_data_2_V_blk_n => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n,
        res_stream_V_data_3_V_blk_n => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n,
        ap_ce => grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    data_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                data_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((data_V_data_V_0_ack_out = ap_const_logic_1) and (data_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        data_V_data_V_0_sel_rd <= not(data_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    data_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                data_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((data_V_data_V_0_ack_in = ap_const_logic_1) and (data_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        data_V_data_V_0_sel_wr <= not(data_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    data_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                data_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((data_V_data_V_0_state = ap_const_lv2_2) and (data_V_data_V_0_vld_in = ap_const_logic_0)) or ((data_V_data_V_0_state = ap_const_lv2_3) and (data_V_data_V_0_vld_in = ap_const_logic_0) and (data_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    data_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((data_V_data_V_0_state = ap_const_lv2_1) and (data_V_data_V_0_ack_out = ap_const_logic_0)) or ((data_V_data_V_0_state = ap_const_lv2_3) and (data_V_data_V_0_ack_out = ap_const_logic_0) and (data_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    data_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((data_V_data_V_0_vld_in = ap_const_logic_0) and (data_V_data_V_0_ack_out = ap_const_logic_1))) and not(((data_V_data_V_0_ack_out = ap_const_logic_0) and (data_V_data_V_0_vld_in = ap_const_logic_1))) and (data_V_data_V_0_state = ap_const_lv2_3)) or ((data_V_data_V_0_state = ap_const_lv2_1) and (data_V_data_V_0_ack_out = ap_const_logic_1)) or ((data_V_data_V_0_state = ap_const_lv2_2) and (data_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    data_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    data_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_ready = ap_const_logic_1)) then 
                    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvar_flatten_reg_132 <= indvar_flatten_next_reg_196;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_132 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((data_V_data_V_0_load_A = ap_const_logic_1)) then
                data_V_data_V_0_payload_A <= data_V_data_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((data_V_data_V_0_load_B = ap_const_logic_1)) then
                data_V_data_V_0_payload_B <= data_V_data_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                indvar_flatten_next_reg_196 <= indvar_flatten_next_fu_187_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, data_V_data_V_0_vld_out, ap_CS_fsm_state3, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n, ap_CS_fsm_state8, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n, ap_CS_fsm_state2, exitcond_flatten_fu_181_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond_flatten_fu_181_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state3 => 
                if (((data_V_data_V_0_vld_out = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if ((not(((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state3 <= ap_NS_fsm(2);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state8_assign_proc : process(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n)
    begin
                ap_block_state8 <= ((grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n = ap_const_logic_0) or (grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    data_V_data_V_0_ack_in <= data_V_data_V_0_state(1);

    data_V_data_V_0_ack_out_assign_proc : process(data_V_data_V_0_vld_out, ap_CS_fsm_state3)
    begin
        if (((data_V_data_V_0_vld_out = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            data_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            data_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_V_0_data_out_assign_proc : process(data_V_data_V_0_payload_A, data_V_data_V_0_payload_B, data_V_data_V_0_sel)
    begin
        if ((data_V_data_V_0_sel = ap_const_logic_1)) then 
            data_V_data_V_0_data_out <= data_V_data_V_0_payload_B;
        else 
            data_V_data_V_0_data_out <= data_V_data_V_0_payload_A;
        end if; 
    end process;

    data_V_data_V_0_load_A <= (not(data_V_data_V_0_sel_wr) and data_V_data_V_0_state_cmp_full);
    data_V_data_V_0_load_B <= (data_V_data_V_0_state_cmp_full and data_V_data_V_0_sel_wr);
    data_V_data_V_0_sel <= data_V_data_V_0_sel_rd;
    data_V_data_V_0_state_cmp_full <= '0' when (data_V_data_V_0_state = ap_const_lv2_1) else '1';
    data_V_data_V_0_vld_in <= data_V_data_V_TVALID;
    data_V_data_V_0_vld_out <= data_V_data_V_0_state(0);

    data_V_data_V_TDATA_blk_n_assign_proc : process(data_V_data_V_0_state, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_V_data_V_TDATA_blk_n <= data_V_data_V_0_state(0);
        else 
            data_V_data_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_V_TREADY <= data_V_data_V_0_state(1);
    exitcond_flatten_fu_181_p2 <= "1" when (indvar_flatten_reg_132 = ap_const_lv15_4B00) else "0";

    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_ce_assign_proc : process(ap_CS_fsm_state1, data_V_data_V_0_vld_out, ap_CS_fsm_state3, ap_CS_fsm_state2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((data_V_data_V_0_vld_out = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_ce <= ap_const_logic_0;
        else 
            grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_ap_start_reg;
    indvar_flatten_next_fu_187_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_132) + unsigned(ap_const_lv15_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_V_data_0_V_blk_n <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_blk_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_din;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state8, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_V_data_0_V_write <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_0_V_write;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(ap_CS_fsm_state8, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_V_data_1_V_blk_n <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_blk_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_din;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state8, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_V_data_1_V_write <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_1_V_write;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(ap_CS_fsm_state8, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_V_data_2_V_blk_n <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_blk_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_din;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state8, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_V_data_2_V_write <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_2_V_write;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(ap_CS_fsm_state8, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_V_data_3_V_blk_n <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_blk_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_din;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state8, grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            res_V_data_3_V_write <= grp_compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s_fu_143_res_stream_V_data_3_V_write;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
