-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu_array_ap_fixed_6u_array_ap_ufixed_6_0_4_0_0_6u_relu_config12_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC );
end;


architecture behav of relu_array_ap_fixed_6u_array_ap_ufixed_6_0_4_0_0_6u_relu_config12_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_reg_1101 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_reg_1101_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal i_reg_274 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal data_V_data_0_V0_status : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal res_V_data_0_V1_status : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_1101_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_291_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_data_V_0_reg_1110 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_1_reg_1119 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_215_reg_1128 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_3_reg_1137 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_4_reg_1146 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_5_reg_1155 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_2_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_reg_1164 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_reg_1169 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_reg_1174 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_1_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_1_reg_1179 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_1189 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_2_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_2_reg_1194 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_reg_1204 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_3_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_3_reg_1209 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_reg_1214 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_reg_1219 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_4_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_4_reg_1224 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_reg_1229 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_reg_1234 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_5_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_5_reg_1239 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_5_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_5_reg_1244 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_5_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_5_reg_1249 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_0_V_fu_603_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_0_V_reg_1254 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_1_V_fu_701_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_1_V_reg_1259 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_2_V_fu_799_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_2_V_reg_1264 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_3_V_fu_897_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_3_V_reg_1269 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_4_V_fu_995_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_4_V_reg_1274 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_5_V_fu_1093_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_5_V_reg_1279 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal data_V_data_0_V0_update : STD_LOGIC;
    signal res_V_data_0_V1_update : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_35_fu_321_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_s_fu_331_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_40_fu_353_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_10_1_fu_363_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_45_fu_385_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_10_2_fu_395_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_50_fu_417_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_10_3_fu_427_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_55_fu_449_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_10_4_fu_459_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_60_fu_481_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_10_5_fu_491_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_34_fu_527_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_546_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_cast_fu_559_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_8_fu_518_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_fu_563_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_569_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_534_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_589_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_fu_595_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_39_fu_625_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_644_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_1_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_1_cast_fu_657_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_8_1_fu_616_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_1_fu_661_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_43_fu_667_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev8_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_1_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_687_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_1_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_1_fu_693_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_44_fu_723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_s_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_742_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_2_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_2_cast_fu_755_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_8_2_fu_714_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_2_fu_759_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_48_fu_765_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_730_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_2_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_785_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_2_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_2_fu_791_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_49_fu_821_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_3_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_840_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_3_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_3_cast_fu_853_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_8_3_fu_812_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_3_fu_857_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_53_fu_863_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_3_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_3_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_3_fu_889_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_54_fu_919_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_4_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_938_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_4_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_4_cast_fu_951_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_8_4_fu_910_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_4_fu_955_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_58_fu_961_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_926_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_4_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_4_fu_981_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_4_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_4_fu_987_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_59_fu_1017_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_5_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1036_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_5_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_5_cast_fu_1049_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_8_5_fu_1008_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_5_fu_1053_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_63_fu_1059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1024_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_5_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_5_fu_1079_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_5_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_5_fu_1085_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_285_p2 = ap_const_lv1_0))) then 
                i_reg_274 <= i_1_fu_291_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_274 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1101 = ap_const_lv1_0))) then
                Range1_all_ones_1_reg_1184 <= Range1_all_ones_1_fu_373_p2;
                Range1_all_ones_2_reg_1199 <= Range1_all_ones_2_fu_405_p2;
                Range1_all_ones_3_reg_1214 <= Range1_all_ones_3_fu_437_p2;
                Range1_all_ones_4_reg_1229 <= Range1_all_ones_4_fu_469_p2;
                Range1_all_ones_5_reg_1244 <= Range1_all_ones_5_fu_501_p2;
                Range1_all_ones_reg_1169 <= Range1_all_ones_fu_341_p2;
                Range1_all_zeros_1_reg_1189 <= Range1_all_zeros_1_fu_379_p2;
                Range1_all_zeros_2_reg_1204 <= Range1_all_zeros_2_fu_411_p2;
                Range1_all_zeros_3_reg_1219 <= Range1_all_zeros_3_fu_443_p2;
                Range1_all_zeros_4_reg_1234 <= Range1_all_zeros_4_fu_475_p2;
                Range1_all_zeros_5_reg_1249 <= Range1_all_zeros_5_fu_507_p2;
                Range1_all_zeros_reg_1174 <= Range1_all_zeros_fu_347_p2;
                r_2_1_reg_1179 <= r_2_1_fu_357_p2;
                r_2_2_reg_1194 <= r_2_2_fu_389_p2;
                r_2_3_reg_1209 <= r_2_3_fu_421_p2;
                r_2_4_reg_1224 <= r_2_4_fu_453_p2;
                r_2_5_reg_1239 <= r_2_5_fu_485_p2;
                r_2_reg_1164 <= r_2_fu_325_p2;
                tmp_data_V_0_reg_1110 <= data_V_data_0_V_dout;
                tmp_data_V_1_reg_1119 <= data_V_data_1_V_dout;
                tmp_data_V_215_reg_1128 <= data_V_data_2_V_dout;
                tmp_data_V_3_reg_1137 <= data_V_data_3_V_dout;
                tmp_data_V_4_reg_1146 <= data_V_data_4_V_dout;
                tmp_data_V_5_reg_1155 <= data_V_data_5_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1101_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_data_0_V_reg_1254 <= tmp_data_0_V_fu_603_p3;
                tmp_data_1_V_reg_1259 <= tmp_data_1_V_fu_701_p3;
                tmp_data_2_V_reg_1264 <= tmp_data_2_V_fu_799_p3;
                tmp_data_3_V_reg_1269 <= tmp_data_3_V_fu_897_p3;
                tmp_data_4_V_reg_1274 <= tmp_data_4_V_fu_995_p3;
                tmp_data_5_V_reg_1279 <= tmp_data_5_V_fu_1093_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_1101 <= tmp_fu_285_p2;
                tmp_reg_1101_pp0_iter1_reg <= tmp_reg_1101;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                tmp_reg_1101_pp0_iter2_reg <= tmp_reg_1101_pp0_iter1_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, tmp_fu_285_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_fu_285_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_fu_285_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    Range1_all_ones_1_fu_373_p2 <= "1" when (p_Result_10_1_fu_363_p4 = ap_const_lv6_3F) else "0";
    Range1_all_ones_2_fu_405_p2 <= "1" when (p_Result_10_2_fu_395_p4 = ap_const_lv6_3F) else "0";
    Range1_all_ones_3_fu_437_p2 <= "1" when (p_Result_10_3_fu_427_p4 = ap_const_lv6_3F) else "0";
    Range1_all_ones_4_fu_469_p2 <= "1" when (p_Result_10_4_fu_459_p4 = ap_const_lv6_3F) else "0";
    Range1_all_ones_5_fu_501_p2 <= "1" when (p_Result_10_5_fu_491_p4 = ap_const_lv6_3F) else "0";
    Range1_all_ones_fu_341_p2 <= "1" when (p_Result_s_fu_331_p4 = ap_const_lv6_3F) else "0";
    Range1_all_zeros_1_fu_379_p2 <= "1" when (p_Result_10_1_fu_363_p4 = ap_const_lv6_0) else "0";
    Range1_all_zeros_2_fu_411_p2 <= "1" when (p_Result_10_2_fu_395_p4 = ap_const_lv6_0) else "0";
    Range1_all_zeros_3_fu_443_p2 <= "1" when (p_Result_10_3_fu_427_p4 = ap_const_lv6_0) else "0";
    Range1_all_zeros_4_fu_475_p2 <= "1" when (p_Result_10_4_fu_459_p4 = ap_const_lv6_0) else "0";
    Range1_all_zeros_5_fu_507_p2 <= "1" when (p_Result_10_5_fu_491_p4 = ap_const_lv6_0) else "0";
    Range1_all_zeros_fu_347_p2 <= "1" when (p_Result_s_fu_331_p4 = ap_const_lv6_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_reg_1101, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg, data_V_data_0_V0_status, res_V_data_0_V1_status)
    begin
                ap_block_pp0_stage0_01001 <= (((data_V_data_0_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_reg_1101 = ap_const_lv1_0)) or ((res_V_data_0_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_reg_1101, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg, data_V_data_0_V0_status, res_V_data_0_V1_status)
    begin
                ap_block_pp0_stage0_11001 <= (((data_V_data_0_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_reg_1101 = ap_const_lv1_0)) or ((res_V_data_0_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_reg_1101, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg, data_V_data_0_V0_status, res_V_data_0_V1_status)
    begin
                ap_block_pp0_stage0_subdone <= (((data_V_data_0_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_reg_1101 = ap_const_lv1_0)) or ((res_V_data_0_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(tmp_reg_1101, data_V_data_0_V0_status)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((data_V_data_0_V0_status = ap_const_logic_0) and (tmp_reg_1101 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(tmp_reg_1101_pp0_iter2_reg, res_V_data_0_V1_status)
    begin
                ap_block_state5_pp0_stage0_iter3 <= ((res_V_data_0_V1_status = ap_const_logic_0) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_fu_285_p2)
    begin
        if ((tmp_fu_285_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    carry_1_1_fu_681_p2 <= (tmp_41_fu_632_p3 and rev8_fu_675_p2);
    carry_1_2_fu_779_p2 <= (tmp_46_fu_730_p3 and rev1_fu_773_p2);
    carry_1_3_fu_877_p2 <= (tmp_51_fu_828_p3 and rev2_fu_871_p2);
    carry_1_4_fu_975_p2 <= (tmp_56_fu_926_p3 and rev3_fu_969_p2);
    carry_1_5_fu_1073_p2 <= (tmp_61_fu_1024_p3 and rev4_fu_1067_p2);
    carry_1_fu_583_p2 <= (tmp_36_fu_534_p3 and rev_fu_577_p2);
    data_V_data_0_V0_status <= (data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    data_V_data_0_V0_update_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_1101, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1101 = ap_const_lv1_0))) then 
            data_V_data_0_V0_update <= ap_const_logic_1;
        else 
            data_V_data_0_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_reg_1101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_1101 = ap_const_lv1_0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_0_V_read <= data_V_data_0_V0_update;

    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_reg_1101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_1101 = ap_const_lv1_0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_1_V_read <= data_V_data_0_V0_update;

    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_reg_1101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_1101 = ap_const_lv1_0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_2_V_read <= data_V_data_0_V0_update;

    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_reg_1101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_1101 = ap_const_lv1_0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_3_V_read <= data_V_data_0_V0_update;

    data_V_data_4_V_blk_n_assign_proc : process(data_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_reg_1101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_1101 = ap_const_lv1_0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_4_V_read <= data_V_data_0_V0_update;

    data_V_data_5_V_blk_n_assign_proc : process(data_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_reg_1101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_reg_1101 = ap_const_lv1_0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_5_V_read <= data_V_data_0_V0_update;
    deleted_zeros_1_fu_687_p3 <= 
        Range1_all_ones_1_reg_1184 when (carry_1_1_fu_681_p2(0) = '1') else 
        Range1_all_zeros_1_reg_1189;
    deleted_zeros_2_fu_785_p3 <= 
        Range1_all_ones_2_reg_1199 when (carry_1_2_fu_779_p2(0) = '1') else 
        Range1_all_zeros_2_reg_1204;
    deleted_zeros_3_fu_883_p3 <= 
        Range1_all_ones_3_reg_1214 when (carry_1_3_fu_877_p2(0) = '1') else 
        Range1_all_zeros_3_reg_1219;
    deleted_zeros_4_fu_981_p3 <= 
        Range1_all_ones_4_reg_1229 when (carry_1_4_fu_975_p2(0) = '1') else 
        Range1_all_zeros_4_reg_1234;
    deleted_zeros_5_fu_1079_p3 <= 
        Range1_all_ones_5_reg_1244 when (carry_1_5_fu_1073_p2(0) = '1') else 
        Range1_all_zeros_5_reg_1249;
    deleted_zeros_fu_589_p3 <= 
        Range1_all_ones_reg_1169 when (carry_1_fu_583_p2(0) = '1') else 
        Range1_all_zeros_reg_1174;
    i_1_fu_291_p2 <= std_logic_vector(unsigned(i_reg_274) + unsigned(ap_const_lv4_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_10_1_fu_363_p4 <= data_V_data_1_V_dout(15 downto 10);
    p_Result_10_2_fu_395_p4 <= data_V_data_2_V_dout(15 downto 10);
    p_Result_10_3_fu_427_p4 <= data_V_data_3_V_dout(15 downto 10);
    p_Result_10_4_fu_459_p4 <= data_V_data_4_V_dout(15 downto 10);
    p_Result_10_5_fu_491_p4 <= data_V_data_5_V_dout(15 downto 10);
    p_Result_s_fu_331_p4 <= data_V_data_0_V_dout(15 downto 10);
    p_Val2_8_1_fu_616_p4 <= tmp_data_V_1_reg_1119(9 downto 4);
    p_Val2_8_2_fu_714_p4 <= tmp_data_V_215_reg_1128(9 downto 4);
    p_Val2_8_3_fu_812_p4 <= tmp_data_V_3_reg_1137(9 downto 4);
    p_Val2_8_4_fu_910_p4 <= tmp_data_V_4_reg_1146(9 downto 4);
    p_Val2_8_5_fu_1008_p4 <= tmp_data_V_5_reg_1155(9 downto 4);
    p_Val2_8_fu_518_p4 <= tmp_data_V_0_reg_1110(9 downto 4);
    p_Val2_9_1_fu_661_p2 <= std_logic_vector(unsigned(tmp_84_1_cast_fu_657_p1) + unsigned(p_Val2_8_1_fu_616_p4));
    p_Val2_9_2_fu_759_p2 <= std_logic_vector(unsigned(tmp_84_2_cast_fu_755_p1) + unsigned(p_Val2_8_2_fu_714_p4));
    p_Val2_9_3_fu_857_p2 <= std_logic_vector(unsigned(tmp_84_3_cast_fu_853_p1) + unsigned(p_Val2_8_3_fu_812_p4));
    p_Val2_9_4_fu_955_p2 <= std_logic_vector(unsigned(tmp_84_4_cast_fu_951_p1) + unsigned(p_Val2_8_4_fu_910_p4));
    p_Val2_9_5_fu_1053_p2 <= std_logic_vector(unsigned(tmp_84_5_cast_fu_1049_p1) + unsigned(p_Val2_8_5_fu_1008_p4));
    p_Val2_9_fu_563_p2 <= std_logic_vector(unsigned(tmp_84_cast_fu_559_p1) + unsigned(p_Val2_8_fu_518_p4));
    p_mux_1_fu_693_p3 <= 
        p_Val2_9_1_fu_661_p2 when (deleted_zeros_1_fu_687_p3(0) = '1') else 
        ap_const_lv6_3F;
    p_mux_2_fu_791_p3 <= 
        p_Val2_9_2_fu_759_p2 when (deleted_zeros_2_fu_785_p3(0) = '1') else 
        ap_const_lv6_3F;
    p_mux_3_fu_889_p3 <= 
        p_Val2_9_3_fu_857_p2 when (deleted_zeros_3_fu_883_p3(0) = '1') else 
        ap_const_lv6_3F;
    p_mux_4_fu_987_p3 <= 
        p_Val2_9_4_fu_955_p2 when (deleted_zeros_4_fu_981_p3(0) = '1') else 
        ap_const_lv6_3F;
    p_mux_5_fu_1085_p3 <= 
        p_Val2_9_5_fu_1053_p2 when (deleted_zeros_5_fu_1079_p3(0) = '1') else 
        ap_const_lv6_3F;
    p_mux_fu_595_p3 <= 
        p_Val2_9_fu_563_p2 when (deleted_zeros_fu_589_p3(0) = '1') else 
        ap_const_lv6_3F;
    r_1_fu_639_p2 <= (tmp_39_fu_625_p3 or r_2_1_reg_1179);
    r_2_1_fu_357_p2 <= "0" when (tmp_40_fu_353_p1 = ap_const_lv3_0) else "1";
    r_2_2_fu_389_p2 <= "0" when (tmp_45_fu_385_p1 = ap_const_lv3_0) else "1";
    r_2_3_fu_421_p2 <= "0" when (tmp_50_fu_417_p1 = ap_const_lv3_0) else "1";
    r_2_4_fu_453_p2 <= "0" when (tmp_55_fu_449_p1 = ap_const_lv3_0) else "1";
    r_2_5_fu_485_p2 <= "0" when (tmp_60_fu_481_p1 = ap_const_lv3_0) else "1";
    r_2_fu_325_p2 <= "0" when (tmp_35_fu_321_p1 = ap_const_lv3_0) else "1";
    r_3_fu_835_p2 <= (tmp_49_fu_821_p3 or r_2_3_reg_1209);
    r_4_fu_933_p2 <= (tmp_54_fu_919_p3 or r_2_4_reg_1224);
    r_5_fu_1031_p2 <= (tmp_59_fu_1017_p3 or r_2_5_reg_1239);
    r_fu_541_p2 <= (tmp_34_fu_527_p3 or r_2_reg_1164);
    r_s_fu_737_p2 <= (tmp_44_fu_723_p3 or r_2_2_reg_1194);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    res_V_data_0_V1_status <= (res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    res_V_data_0_V1_update_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_0_V1_update <= ap_const_logic_1;
        else 
            res_V_data_0_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_1254;
    res_V_data_0_V_write <= res_V_data_0_V1_update;

    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_1259;
    res_V_data_1_V_write <= res_V_data_0_V1_update;

    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_1264;
    res_V_data_2_V_write <= res_V_data_0_V1_update;

    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_1269;
    res_V_data_3_V_write <= res_V_data_0_V1_update;

    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_1274;
    res_V_data_4_V_write <= res_V_data_0_V1_update;

    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_reg_1101_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_reg_1101_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_1279;
    res_V_data_5_V_write <= res_V_data_0_V1_update;
    rev1_fu_773_p2 <= (tmp_48_fu_765_p3 xor ap_const_lv1_1);
    rev2_fu_871_p2 <= (tmp_53_fu_863_p3 xor ap_const_lv1_1);
    rev3_fu_969_p2 <= (tmp_58_fu_961_p3 xor ap_const_lv1_1);
    rev4_fu_1067_p2 <= (tmp_63_fu_1059_p3 xor ap_const_lv1_1);
    rev8_fu_675_p2 <= (tmp_43_fu_667_p3 xor ap_const_lv1_1);
    rev_fu_577_p2 <= (tmp_38_fu_569_p3 xor ap_const_lv1_1);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_34_fu_527_p3 <= tmp_data_V_0_reg_1110(4 downto 4);
    tmp_35_fu_321_p1 <= data_V_data_0_V_dout(3 - 1 downto 0);
    tmp_36_fu_534_p3 <= tmp_data_V_0_reg_1110(9 downto 9);
    tmp_37_fu_546_p3 <= tmp_data_V_0_reg_1110(3 downto 3);
    tmp_38_fu_569_p3 <= p_Val2_9_fu_563_p2(5 downto 5);
    tmp_39_fu_625_p3 <= tmp_data_V_1_reg_1119(4 downto 4);
    tmp_40_fu_353_p1 <= data_V_data_1_V_dout(3 - 1 downto 0);
    tmp_41_fu_632_p3 <= tmp_data_V_1_reg_1119(9 downto 9);
    tmp_42_fu_644_p3 <= tmp_data_V_1_reg_1119(3 downto 3);
    tmp_43_fu_667_p3 <= p_Val2_9_1_fu_661_p2(5 downto 5);
    tmp_44_fu_723_p3 <= tmp_data_V_215_reg_1128(4 downto 4);
    tmp_45_fu_385_p1 <= data_V_data_2_V_dout(3 - 1 downto 0);
    tmp_46_fu_730_p3 <= tmp_data_V_215_reg_1128(9 downto 9);
    tmp_47_fu_742_p3 <= tmp_data_V_215_reg_1128(3 downto 3);
    tmp_48_fu_765_p3 <= p_Val2_9_2_fu_759_p2(5 downto 5);
    tmp_49_fu_821_p3 <= tmp_data_V_3_reg_1137(4 downto 4);
    tmp_50_fu_417_p1 <= data_V_data_3_V_dout(3 - 1 downto 0);
    tmp_51_fu_828_p3 <= tmp_data_V_3_reg_1137(9 downto 9);
    tmp_52_fu_840_p3 <= tmp_data_V_3_reg_1137(3 downto 3);
    tmp_53_fu_863_p3 <= p_Val2_9_3_fu_857_p2(5 downto 5);
    tmp_54_fu_919_p3 <= tmp_data_V_4_reg_1146(4 downto 4);
    tmp_55_fu_449_p1 <= data_V_data_4_V_dout(3 - 1 downto 0);
    tmp_56_fu_926_p3 <= tmp_data_V_4_reg_1146(9 downto 9);
    tmp_57_fu_938_p3 <= tmp_data_V_4_reg_1146(3 downto 3);
    tmp_58_fu_961_p3 <= p_Val2_9_4_fu_955_p2(5 downto 5);
    tmp_59_fu_1017_p3 <= tmp_data_V_5_reg_1155(4 downto 4);
    tmp_5_fu_553_p2 <= (tmp_37_fu_546_p3 and r_fu_541_p2);
    tmp_60_fu_481_p1 <= data_V_data_5_V_dout(3 - 1 downto 0);
    tmp_61_fu_1024_p3 <= tmp_data_V_5_reg_1155(9 downto 9);
    tmp_62_fu_1036_p3 <= tmp_data_V_5_reg_1155(3 downto 3);
    tmp_63_fu_1059_p3 <= p_Val2_9_5_fu_1053_p2(5 downto 5);
    tmp_78_1_fu_611_p2 <= "1" when (signed(tmp_data_V_1_reg_1119) > signed(ap_const_lv16_0)) else "0";
    tmp_78_2_fu_709_p2 <= "1" when (signed(tmp_data_V_215_reg_1128) > signed(ap_const_lv16_0)) else "0";
    tmp_78_3_fu_807_p2 <= "1" when (signed(tmp_data_V_3_reg_1137) > signed(ap_const_lv16_0)) else "0";
    tmp_78_4_fu_905_p2 <= "1" when (signed(tmp_data_V_4_reg_1146) > signed(ap_const_lv16_0)) else "0";
    tmp_78_5_fu_1003_p2 <= "1" when (signed(tmp_data_V_5_reg_1155) > signed(ap_const_lv16_0)) else "0";
    tmp_84_1_cast_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_1_fu_651_p2),6));
    tmp_84_1_fu_651_p2 <= (tmp_42_fu_644_p3 and r_1_fu_639_p2);
    tmp_84_2_cast_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_2_fu_749_p2),6));
    tmp_84_2_fu_749_p2 <= (tmp_47_fu_742_p3 and r_s_fu_737_p2);
    tmp_84_3_cast_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_3_fu_847_p2),6));
    tmp_84_3_fu_847_p2 <= (tmp_52_fu_840_p3 and r_3_fu_835_p2);
    tmp_84_4_cast_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_4_fu_945_p2),6));
    tmp_84_4_fu_945_p2 <= (tmp_57_fu_938_p3 and r_4_fu_933_p2);
    tmp_84_5_cast_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_5_fu_1043_p2),6));
    tmp_84_5_fu_1043_p2 <= (tmp_62_fu_1036_p3 and r_5_fu_1031_p2);
    tmp_84_cast_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_553_p2),6));
    tmp_data_0_V_fu_603_p3 <= 
        p_mux_fu_595_p3 when (tmp_s_fu_513_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_1_V_fu_701_p3 <= 
        p_mux_1_fu_693_p3 when (tmp_78_1_fu_611_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_2_V_fu_799_p3 <= 
        p_mux_2_fu_791_p3 when (tmp_78_2_fu_709_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_3_V_fu_897_p3 <= 
        p_mux_3_fu_889_p3 when (tmp_78_3_fu_807_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_4_V_fu_995_p3 <= 
        p_mux_4_fu_987_p3 when (tmp_78_4_fu_905_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_5_V_fu_1093_p3 <= 
        p_mux_5_fu_1085_p3 when (tmp_78_5_fu_1003_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_fu_285_p2 <= "1" when (i_reg_274 = ap_const_lv4_C) else "0";
    tmp_s_fu_513_p2 <= "1" when (signed(tmp_data_V_0_reg_1110) > signed(ap_const_lv16_0)) else "0";
end behav;
