-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config9_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config9_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv9_10A : STD_LOGIC_VECTOR (8 downto 0) := "100001010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_4 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_4_5 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_4_6 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_4_7 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_4_12 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_4_13 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_4_14 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal kernel_data_V_4_15 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal line_buffer_Array_V_4_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_4_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_4_0_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal line_buffer_Array_V_4_0_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_4_0_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_4_0_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal line_buffer_Array_V_4_0_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_4_0_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_4_0_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal line_buffer_Array_V_4_0_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_4_0_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_4_0_3_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_flatten_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_cond33_i_i_reg_1034 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_236 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_flatten_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal res_V_data_0_V1_status : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_977_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_264_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next_reg_981 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_data_0_V_4_reg_986 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_V_data_0_V0_status : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_data_1_V_4_reg_992 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_2_V_4_reg_998 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_3_V_4_reg_1004 : STD_LOGIC_VECTOR (5 downto 0);
    signal DataOut_V_31_reg_1010 : STD_LOGIC_VECTOR (5 downto 0);
    signal DataOut_V_32_reg_1016 : STD_LOGIC_VECTOR (5 downto 0);
    signal DataOut_V_33_reg_1022 : STD_LOGIC_VECTOR (5 downto 0);
    signal DataOut_V_reg_1028 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_cond33_i_i_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_1_fu_456_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_0_V_1_reg_1038 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_1_V_1_fu_464_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_1_V_1_reg_1043 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_2_V_1_fu_471_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_2_V_1_reg_1048 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_3_V_1_fu_479_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_3_V_1_reg_1053 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_38_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1063 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_1068 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_2_fu_520_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_0_V_2_reg_1073 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_1_V_2_fu_528_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_1_V_2_reg_1078 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_2_V_2_fu_535_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_2_V_2_reg_1083 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_3_V_2_fu_543_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_3_V_2_reg_1088 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_191_1_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_1_reg_1093 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_1_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_1_reg_1098 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_1_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_1_reg_1103 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_4_fu_584_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_0_V_4_reg_1108 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_1_V_4_fu_592_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_1_V_4_reg_1113 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_2_V_4_fu_599_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_2_V_4_reg_1118 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_3_V_4_fu_607_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_3_V_4_reg_1123 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_191_2_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_2_reg_1128 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_2_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_2_reg_1133 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_2_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_2_reg_1138 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_7_fu_648_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_0_V_7_reg_1143 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_1_V_7_fu_656_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_1_V_7_reg_1148 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_2_V_7_fu_663_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_2_V_7_reg_1153 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_3_V_7_fu_671_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_3_V_7_reg_1158 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_191_3_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_3_reg_1163 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_3_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_3_reg_1168 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_3_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_3_reg_1173 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1178 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_i_i_fu_736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in_i_i_reg_1182 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_1187 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in28_i_i_fu_780_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in28_i_i_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_V_fu_823_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_reg_1196 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_fu_866_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_reg_1201 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_fu_909_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_1206 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_fu_952_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_1211 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_240_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_251_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_i_i_reg_247 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_i_i_reg_247 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_data_0_V0_update : STD_LOGIC;
    signal res_V_data_0_V1_update : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_31_fu_718_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phi1_fu_492_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_phi2_fu_506_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_phi3_fu_556_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_phi4_fu_570_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_phi5_fu_620_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_phi6_fu_634_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_phi7_fu_684_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_phi_fu_698_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal phitmp_i_i_fu_730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp39_i_i_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_806_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_813_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_data_0_V_fu_823_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_fu_823_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_fu_823_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_fu_823_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_fu_823_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_fu_849_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_fu_856_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_data_1_V_fu_866_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_fu_866_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_fu_866_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_fu_866_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_fu_866_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_47_fu_892_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_48_fu_899_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_data_2_V_fu_909_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_fu_909_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_fu_909_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_fu_909_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_fu_909_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_50_fu_935_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_51_fu_942_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_data_3_V_fu_952_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_fu_952_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_fu_952_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_fu_952_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_fu_952_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_317 : BOOLEAN;
    signal ap_condition_779 : BOOLEAN;
    signal ap_condition_277 : BOOLEAN;
    signal ap_condition_784 : BOOLEAN;

    component materials_net_mux_42_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config9_s_line_bpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    line_buffer_Array_V_4_0_0_U : component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config9_s_line_bpcA
    generic map (
        DataWidth => 6,
        AddressRange => 19,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_12,
        ce0 => line_buffer_Array_V_4_0_0_ce0,
        we0 => line_buffer_Array_V_4_0_0_we0,
        d0 => data_V_data_0_V_dout,
        q0 => line_buffer_Array_V_4_0_0_q0);

    line_buffer_Array_V_4_0_1_U : component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config9_s_line_bpcA
    generic map (
        DataWidth => 6,
        AddressRange => 19,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_12,
        ce0 => line_buffer_Array_V_4_0_1_ce0,
        we0 => line_buffer_Array_V_4_0_1_we0,
        d0 => data_V_data_1_V_dout,
        q0 => line_buffer_Array_V_4_0_1_q0);

    line_buffer_Array_V_4_0_2_U : component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config9_s_line_bpcA
    generic map (
        DataWidth => 6,
        AddressRange => 19,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_12,
        ce0 => line_buffer_Array_V_4_0_2_ce0,
        we0 => line_buffer_Array_V_4_0_2_we0,
        d0 => data_V_data_2_V_dout,
        q0 => line_buffer_Array_V_4_0_2_q0);

    line_buffer_Array_V_4_0_3_U : component pooling2d_cl_array_ap_ufixed_4u_array_ap_fixed_16_6_5_3_0_4u_config9_s_line_bpcA
    generic map (
        DataWidth => 6,
        AddressRange => 19,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_12,
        ce0 => line_buffer_Array_V_4_0_3_ce0,
        we0 => line_buffer_Array_V_4_0_3_we0,
        d0 => data_V_data_3_V_dout,
        q0 => line_buffer_Array_V_4_0_3_q0);

    materials_net_mux_42_16_1_1_U164 : component materials_net_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_0_V_fu_823_p1,
        din1 => tmp_data_0_V_fu_823_p2,
        din2 => tmp_data_0_V_fu_823_p3,
        din3 => tmp_data_0_V_fu_823_p4,
        din4 => tmp_data_0_V_fu_823_p5,
        dout => tmp_data_0_V_fu_823_p6);

    materials_net_mux_42_16_1_1_U165 : component materials_net_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_1_V_fu_866_p1,
        din1 => tmp_data_1_V_fu_866_p2,
        din2 => tmp_data_1_V_fu_866_p3,
        din3 => tmp_data_1_V_fu_866_p4,
        din4 => tmp_data_1_V_fu_866_p5,
        dout => tmp_data_1_V_fu_866_p6);

    materials_net_mux_42_16_1_1_U166 : component materials_net_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_2_V_fu_909_p1,
        din1 => tmp_data_2_V_fu_909_p2,
        din2 => tmp_data_2_V_fu_909_p3,
        din3 => tmp_data_2_V_fu_909_p4,
        din4 => tmp_data_2_V_fu_909_p5,
        dout => tmp_data_2_V_fu_909_p6);

    materials_net_mux_42_16_1_1_U167 : component materials_net_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_3_V_fu_952_p1,
        din1 => tmp_data_3_V_fu_952_p2,
        din2 => tmp_data_3_V_fu_952_p3,
        din3 => tmp_data_3_V_fu_952_p4,
        din4 => tmp_data_3_V_fu_952_p5,
        dout => tmp_data_3_V_fu_952_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_30_fu_756_p2 = ap_const_lv1_1) and (tmp_29_fu_712_p2 = ap_const_lv1_1) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_247 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_247 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_247;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
                indvar_flatten_reg_236 <= indvar_flatten_next_reg_981;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_236 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    pX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_317)) then
                if ((tmp_29_fu_712_p2 = ap_const_lv1_1)) then 
                    pX_1 <= ap_const_lv32_0;
                elsif ((tmp_29_fu_712_p2 = ap_const_lv1_0)) then 
                    pX_1 <= tmp_31_fu_718_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_779)) then
                if ((tmp_30_fu_756_p2 = ap_const_lv1_1)) then 
                    pY_1 <= ap_const_lv32_0;
                elsif ((tmp_30_fu_756_p2 = ap_const_lv1_0)) then 
                    pY_1 <= tmp_32_fu_762_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_784)) then 
                    sX_1 <= p_in_i_i_reg_1182;
                elsif ((ap_const_boolean_1 = ap_condition_277)) then 
                    sX_1 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then
                DataOut_V_31_reg_1010 <= line_buffer_Array_V_4_0_0_q0;
                DataOut_V_32_reg_1016 <= line_buffer_Array_V_4_0_1_q0;
                DataOut_V_33_reg_1022 <= line_buffer_Array_V_4_0_2_q0;
                DataOut_V_reg_1028 <= line_buffer_Array_V_4_0_3_q0;
                tmp_data_0_V_4_reg_986 <= data_V_data_0_V_dout;
                tmp_data_1_V_4_reg_992 <= data_V_data_1_V_dout;
                tmp_data_2_V_4_reg_998 <= data_V_data_2_V_dout;
                tmp_data_3_V_4_reg_1004 <= data_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_977 <= exitcond_flatten_fu_258_p2;
                exitcond_flatten_reg_977_pp0_iter1_reg <= exitcond_flatten_reg_977;
                tmp_29_reg_1178 <= tmp_29_fu_712_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                indvar_flatten_next_reg_981 <= indvar_flatten_next_fu_264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then
                kernel_data_V_4_12 <= tmp_data_0_V_4_reg_986;
                kernel_data_V_4_13 <= tmp_data_1_V_4_reg_992;
                kernel_data_V_4_14 <= tmp_data_2_V_4_reg_998;
                kernel_data_V_4_15 <= tmp_data_3_V_4_reg_1004;
                kernel_data_V_4_4 <= DataOut_V_31_reg_1010;
                kernel_data_V_4_5 <= DataOut_V_32_reg_1016;
                kernel_data_V_4_6 <= DataOut_V_33_reg_1022;
                kernel_data_V_4_7 <= DataOut_V_reg_1028;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then
                or_cond33_i_i_reg_1034 <= or_cond33_i_i_fu_450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_29_fu_712_p2 = ap_const_lv1_1) and (tmp_30_fu_756_p2 = ap_const_lv1_0) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then
                p_in28_i_i_reg_1191 <= p_in28_i_i_fu_780_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_29_fu_712_p2 = ap_const_lv1_0))) then
                p_in_i_i_reg_1182 <= p_in_i_i_fu_736_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond33_i_i_fu_450_p2 = ap_const_lv1_1))) then
                    pool_window_0_V_1_reg_1038(9 downto 4) <= pool_window_0_V_1_fu_456_p3(9 downto 4);
                    pool_window_0_V_2_reg_1073(9 downto 4) <= pool_window_0_V_2_fu_520_p3(9 downto 4);
                    pool_window_0_V_4_reg_1108(9 downto 4) <= pool_window_0_V_4_fu_584_p3(9 downto 4);
                    pool_window_0_V_7_reg_1143(9 downto 4) <= pool_window_0_V_7_fu_648_p3(9 downto 4);
                    pool_window_1_V_1_reg_1043(9 downto 4) <= pool_window_1_V_1_fu_464_p3(9 downto 4);
                    pool_window_1_V_2_reg_1078(9 downto 4) <= pool_window_1_V_2_fu_528_p3(9 downto 4);
                    pool_window_1_V_4_reg_1113(9 downto 4) <= pool_window_1_V_4_fu_592_p3(9 downto 4);
                    pool_window_1_V_7_reg_1148(9 downto 4) <= pool_window_1_V_7_fu_656_p3(9 downto 4);
                    pool_window_2_V_1_reg_1048(9 downto 4) <= pool_window_2_V_1_fu_471_p3(9 downto 4);
                    pool_window_2_V_2_reg_1083(9 downto 4) <= pool_window_2_V_2_fu_535_p3(9 downto 4);
                    pool_window_2_V_4_reg_1118(9 downto 4) <= pool_window_2_V_4_fu_599_p3(9 downto 4);
                    pool_window_2_V_7_reg_1153(9 downto 4) <= pool_window_2_V_7_fu_663_p3(9 downto 4);
                    pool_window_3_V_1_reg_1053(9 downto 4) <= pool_window_3_V_1_fu_479_p3(9 downto 4);
                    pool_window_3_V_2_reg_1088(9 downto 4) <= pool_window_3_V_2_fu_543_p3(9 downto 4);
                    pool_window_3_V_4_reg_1123(9 downto 4) <= pool_window_3_V_4_fu_607_p3(9 downto 4);
                    pool_window_3_V_7_reg_1158(9 downto 4) <= pool_window_3_V_7_fu_671_p3(9 downto 4);
                tmp_191_1_reg_1093 <= tmp_191_1_fu_550_p2;
                tmp_191_2_reg_1128 <= tmp_191_2_fu_614_p2;
                tmp_191_3_reg_1163 <= tmp_191_3_fu_678_p2;
                tmp_192_1_reg_1098 <= tmp_192_1_fu_564_p2;
                tmp_192_2_reg_1133 <= tmp_192_2_fu_628_p2;
                tmp_192_3_reg_1168 <= tmp_192_3_fu_692_p2;
                tmp_193_1_reg_1103 <= tmp_193_1_fu_578_p2;
                tmp_193_2_reg_1138 <= tmp_193_2_fu_642_p2;
                tmp_193_3_reg_1173 <= tmp_193_3_fu_706_p2;
                tmp_38_reg_1058 <= tmp_38_fu_486_p2;
                tmp_39_reg_1063 <= tmp_39_fu_500_p2;
                tmp_41_reg_1068 <= tmp_41_fu_514_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_29_reg_1178 = ap_const_lv1_1))) then
                sY_1 <= ap_phi_mux_storemerge_i_i_phi_fu_251_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_29_fu_712_p2 = ap_const_lv1_1))) then
                tmp_30_reg_1187 <= tmp_30_fu_756_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1))) then
                tmp_data_0_V_reg_1196 <= tmp_data_0_V_fu_823_p6;
                tmp_data_1_V_reg_1201 <= tmp_data_1_V_fu_866_p6;
                tmp_data_2_V_reg_1206 <= tmp_data_2_V_fu_909_p6;
                tmp_data_3_V_reg_1211 <= tmp_data_3_V_fu_952_p6;
            end if;
        end if;
    end process;
    pool_window_0_V_1_reg_1038(3 downto 0) <= "0000";
    pool_window_1_V_1_reg_1043(3 downto 0) <= "0000";
    pool_window_2_V_1_reg_1048(3 downto 0) <= "0000";
    pool_window_3_V_1_reg_1053(3 downto 0) <= "0000";
    pool_window_0_V_2_reg_1073(3 downto 0) <= "0000";
    pool_window_1_V_2_reg_1078(3 downto 0) <= "0000";
    pool_window_2_V_2_reg_1083(3 downto 0) <= "0000";
    pool_window_3_V_2_reg_1088(3 downto 0) <= "0000";
    pool_window_0_V_4_reg_1108(3 downto 0) <= "0000";
    pool_window_1_V_4_reg_1113(3 downto 0) <= "0000";
    pool_window_2_V_4_reg_1118(3 downto 0) <= "0000";
    pool_window_3_V_4_reg_1123(3 downto 0) <= "0000";
    pool_window_0_V_7_reg_1143(3 downto 0) <= "0000";
    pool_window_1_V_7_reg_1148(3 downto 0) <= "0000";
    pool_window_2_V_7_reg_1153(3 downto 0) <= "0000";
    pool_window_3_V_7_reg_1158(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_fu_258_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_258_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_258_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond33_i_i_reg_1034, res_V_data_0_V1_status)
    begin
                ap_block_pp0_stage0_01001 <= ((res_V_data_0_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond33_i_i_reg_1034, res_V_data_0_V1_status)
    begin
                ap_block_pp0_stage0_11001 <= ((res_V_data_0_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond33_i_i_reg_1034, res_V_data_0_V1_status)
    begin
                ap_block_pp0_stage0_subdone <= ((res_V_data_0_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, data_V_data_0_V0_status)
    begin
                ap_block_pp0_stage1_11001 <= ((data_V_data_0_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_977 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, data_V_data_0_V0_status)
    begin
                ap_block_pp0_stage1_subdone <= ((data_V_data_0_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_977 = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(exitcond_flatten_reg_977, data_V_data_0_V0_status)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((data_V_data_0_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_977 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter2_assign_proc : process(or_cond33_i_i_reg_1034, res_V_data_0_V1_status)
    begin
                ap_block_state6_pp0_stage0_iter2 <= ((res_V_data_0_V1_status = ap_const_logic_0) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1));
    end process;


    ap_condition_277_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_29_fu_712_p2)
    begin
                ap_condition_277 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_29_fu_712_p2 = ap_const_lv1_1));
    end process;


    ap_condition_317_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_317 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_779_assign_proc : process(exitcond_flatten_reg_977, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_29_fu_712_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_779 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_29_fu_712_p2 = ap_const_lv1_1) and (exitcond_flatten_reg_977 = ap_const_lv1_0));
    end process;


    ap_condition_784_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, tmp_29_reg_1178)
    begin
                ap_condition_784 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_29_reg_1178 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_258_p2)
    begin
        if ((exitcond_flatten_fu_258_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_240_p4_assign_proc : process(exitcond_flatten_reg_977, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_reg_236, indvar_flatten_next_reg_981, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_240_p4 <= indvar_flatten_next_reg_981;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_240_p4 <= indvar_flatten_reg_236;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_251_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond_flatten_reg_977_pp0_iter1_reg, tmp_29_reg_1178, tmp_30_reg_1187, p_in28_i_i_reg_1191, ap_enable_reg_pp0_iter1, ap_phi_reg_pp0_iter1_storemerge_i_i_reg_247)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_29_reg_1178 = ap_const_lv1_1) and (tmp_30_reg_1187 = ap_const_lv1_0) and (exitcond_flatten_reg_977_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_storemerge_i_i_phi_fu_251_p4 <= p_in28_i_i_reg_1191;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_251_p4 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_247;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_i_reg_247 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;
    data_V_data_0_V0_status <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    data_V_data_0_V0_update_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            data_V_data_0_V0_update <= ap_const_logic_1;
        else 
            data_V_data_0_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_977)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_977 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_0_V_read <= data_V_data_0_V0_update;

    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_977)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_977 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_1_V_read <= data_V_data_0_V0_update;

    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_977)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_977 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_2_V_read <= data_V_data_0_V0_update;

    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_977)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_977 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_3_V_read <= data_V_data_0_V0_update;
    exitcond_flatten_fu_258_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_240_p4 = ap_const_lv9_10A) else "0";
    indvar_flatten_next_fu_264_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_240_p4) + unsigned(ap_const_lv9_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_4_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            line_buffer_Array_V_4_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_4_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_4_0_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            line_buffer_Array_V_4_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_4_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_4_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            line_buffer_Array_V_4_0_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_4_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_4_0_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            line_buffer_Array_V_4_0_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_4_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_4_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            line_buffer_Array_V_4_0_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_4_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_4_0_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            line_buffer_Array_V_4_0_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_4_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_4_0_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            line_buffer_Array_V_4_0_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_4_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_4_0_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_977, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten_reg_977 = ap_const_lv1_0))) then 
            line_buffer_Array_V_4_0_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_4_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond33_i_i_fu_450_p2 <= (tmp2_fu_444_p2 and tmp1_fu_438_p2);
    p_in28_i_i_fu_780_p3 <= 
        ap_const_lv32_0 when (tmp_26_fu_412_p2(0) = '1') else 
        phitmp39_i_i_fu_774_p2;
    p_in_i_i_fu_736_p3 <= 
        ap_const_lv32_0 when (tmp_25_fu_402_p2(0) = '1') else 
        phitmp_i_i_fu_730_p2;
    p_phi1_fu_492_p3 <= 
        pool_window_1_V_1_fu_464_p3 when (tmp_38_fu_486_p2(0) = '1') else 
        pool_window_0_V_1_fu_456_p3;
    p_phi2_fu_506_p3 <= 
        pool_window_3_V_1_fu_479_p3 when (tmp_39_fu_500_p2(0) = '1') else 
        pool_window_2_V_1_fu_471_p3;
    p_phi3_fu_556_p3 <= 
        pool_window_1_V_2_fu_528_p3 when (tmp_191_1_fu_550_p2(0) = '1') else 
        pool_window_0_V_2_fu_520_p3;
    p_phi4_fu_570_p3 <= 
        pool_window_3_V_2_fu_543_p3 when (tmp_192_1_fu_564_p2(0) = '1') else 
        pool_window_2_V_2_fu_535_p3;
    p_phi5_fu_620_p3 <= 
        pool_window_1_V_4_fu_592_p3 when (tmp_191_2_fu_614_p2(0) = '1') else 
        pool_window_0_V_4_fu_584_p3;
    p_phi6_fu_634_p3 <= 
        pool_window_3_V_4_fu_607_p3 when (tmp_192_2_fu_628_p2(0) = '1') else 
        pool_window_2_V_4_fu_599_p3;
    p_phi7_fu_684_p3 <= 
        pool_window_1_V_7_fu_656_p3 when (tmp_191_3_fu_678_p2(0) = '1') else 
        pool_window_0_V_7_fu_648_p3;
    p_phi_fu_698_p3 <= 
        pool_window_3_V_7_fu_671_p3 when (tmp_192_3_fu_692_p2(0) = '1') else 
        pool_window_2_V_7_fu_663_p3;
    phitmp39_i_i_fu_774_p2 <= std_logic_vector(unsigned(sY_1) + unsigned(ap_const_lv32_1));
    phitmp_i_i_fu_730_p2 <= std_logic_vector(unsigned(sX_1) + unsigned(ap_const_lv32_1));
    pool_window_0_V_1_fu_456_p3 <= (kernel_data_V_4_4 & ap_const_lv4_0);
    pool_window_0_V_2_fu_520_p3 <= (kernel_data_V_4_5 & ap_const_lv4_0);
    pool_window_0_V_4_fu_584_p3 <= (kernel_data_V_4_6 & ap_const_lv4_0);
    pool_window_0_V_7_fu_648_p3 <= (kernel_data_V_4_7 & ap_const_lv4_0);
    pool_window_1_V_1_fu_464_p3 <= (DataOut_V_31_reg_1010 & ap_const_lv4_0);
    pool_window_1_V_2_fu_528_p3 <= (DataOut_V_32_reg_1016 & ap_const_lv4_0);
    pool_window_1_V_4_fu_592_p3 <= (DataOut_V_33_reg_1022 & ap_const_lv4_0);
    pool_window_1_V_7_fu_656_p3 <= (DataOut_V_reg_1028 & ap_const_lv4_0);
    pool_window_2_V_1_fu_471_p3 <= (kernel_data_V_4_12 & ap_const_lv4_0);
    pool_window_2_V_2_fu_535_p3 <= (kernel_data_V_4_13 & ap_const_lv4_0);
    pool_window_2_V_4_fu_599_p3 <= (kernel_data_V_4_14 & ap_const_lv4_0);
    pool_window_2_V_7_fu_663_p3 <= (kernel_data_V_4_15 & ap_const_lv4_0);
    pool_window_3_V_1_fu_479_p3 <= (tmp_data_0_V_4_reg_986 & ap_const_lv4_0);
    pool_window_3_V_2_fu_543_p3 <= (tmp_data_1_V_4_reg_992 & ap_const_lv4_0);
    pool_window_3_V_4_fu_607_p3 <= (tmp_data_2_V_4_reg_998 & ap_const_lv4_0);
    pool_window_3_V_7_fu_671_p3 <= (tmp_data_3_V_4_reg_1004 & ap_const_lv4_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    res_V_data_0_V1_status <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    res_V_data_0_V1_update_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, or_cond33_i_i_reg_1034, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1))) then 
            res_V_data_0_V1_update <= ap_const_logic_1;
        else 
            res_V_data_0_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, or_cond33_i_i_reg_1034)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_1196;
    res_V_data_0_V_write <= res_V_data_0_V1_update;

    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, or_cond33_i_i_reg_1034)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_1201;
    res_V_data_1_V_write <= res_V_data_0_V1_update;

    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, or_cond33_i_i_reg_1034)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_1206;
    res_V_data_2_V_write <= res_V_data_0_V1_update;

    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, or_cond33_i_i_reg_1034)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond33_i_i_reg_1034 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_1211;
    res_V_data_3_V_write <= res_V_data_0_V1_update;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_438_p2 <= (tmp_26_fu_412_p2 and tmp_25_fu_402_p2);
    tmp2_fu_444_p2 <= (tmp_28_fu_432_p2 and tmp_27_fu_422_p2);
    tmp_191_1_fu_550_p2 <= "1" when (unsigned(pool_window_0_V_2_fu_520_p3) < unsigned(pool_window_1_V_2_fu_528_p3)) else "0";
    tmp_191_2_fu_614_p2 <= "1" when (unsigned(pool_window_0_V_4_fu_584_p3) < unsigned(pool_window_1_V_4_fu_592_p3)) else "0";
    tmp_191_3_fu_678_p2 <= "1" when (unsigned(pool_window_0_V_7_fu_648_p3) < unsigned(pool_window_1_V_7_fu_656_p3)) else "0";
    tmp_192_1_fu_564_p2 <= "1" when (unsigned(pool_window_2_V_2_fu_535_p3) < unsigned(pool_window_3_V_2_fu_543_p3)) else "0";
    tmp_192_2_fu_628_p2 <= "1" when (unsigned(pool_window_2_V_4_fu_599_p3) < unsigned(pool_window_3_V_4_fu_607_p3)) else "0";
    tmp_192_3_fu_692_p2 <= "1" when (unsigned(pool_window_2_V_7_fu_663_p3) < unsigned(pool_window_3_V_7_fu_671_p3)) else "0";
    tmp_193_1_fu_578_p2 <= "1" when (unsigned(p_phi3_fu_556_p3) < unsigned(p_phi4_fu_570_p3)) else "0";
    tmp_193_2_fu_642_p2 <= "1" when (unsigned(p_phi5_fu_620_p3) < unsigned(p_phi6_fu_634_p3)) else "0";
    tmp_193_3_fu_706_p2 <= "1" when (unsigned(p_phi7_fu_684_p3) < unsigned(p_phi_fu_698_p3)) else "0";
    tmp_25_fu_402_p2 <= "1" when (sX_1 = ap_const_lv32_1) else "0";
    tmp_26_fu_412_p2 <= "1" when (sY_1 = ap_const_lv32_1) else "0";
    tmp_27_fu_422_p2 <= "1" when (signed(pY_1) > signed(ap_const_lv32_0)) else "0";
    tmp_28_fu_432_p2 <= "1" when (signed(pX_1) > signed(ap_const_lv32_0)) else "0";
    tmp_29_fu_712_p2 <= "1" when (pX_1 = ap_const_lv32_12) else "0";
    tmp_30_fu_756_p2 <= "1" when (pY_1 = ap_const_lv32_D) else "0";
    tmp_31_fu_718_p2 <= std_logic_vector(unsigned(pX_1) + unsigned(ap_const_lv32_1));
    tmp_32_fu_762_p2 <= std_logic_vector(unsigned(pY_1) + unsigned(ap_const_lv32_1));
    tmp_38_fu_486_p2 <= "1" when (unsigned(pool_window_0_V_1_fu_456_p3) < unsigned(pool_window_1_V_1_fu_464_p3)) else "0";
    tmp_39_fu_500_p2 <= "1" when (unsigned(pool_window_2_V_1_fu_471_p3) < unsigned(pool_window_3_V_1_fu_479_p3)) else "0";
    tmp_40_fu_806_p3 <= 
        ap_const_lv2_3 when (tmp_39_reg_1063(0) = '1') else 
        ap_const_lv2_2;
    tmp_41_fu_514_p2 <= "1" when (unsigned(p_phi1_fu_492_p3) < unsigned(p_phi2_fu_506_p3)) else "0";
    tmp_42_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_reg_1058),2));
    tmp_44_fu_849_p3 <= 
        ap_const_lv2_3 when (tmp_192_1_reg_1098(0) = '1') else 
        ap_const_lv2_2;
    tmp_45_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_191_1_reg_1093),2));
    tmp_47_fu_892_p3 <= 
        ap_const_lv2_3 when (tmp_192_2_reg_1133(0) = '1') else 
        ap_const_lv2_2;
    tmp_48_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_191_2_reg_1128),2));
    tmp_50_fu_935_p3 <= 
        ap_const_lv2_3 when (tmp_192_3_reg_1168(0) = '1') else 
        ap_const_lv2_2;
    tmp_51_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_191_3_reg_1163),2));
    tmp_data_0_V_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_0_V_1_reg_1038),16));
    tmp_data_0_V_fu_823_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_1_V_1_reg_1043),16));
    tmp_data_0_V_fu_823_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_2_V_1_reg_1048),16));
    tmp_data_0_V_fu_823_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_3_V_1_reg_1053),16));
    tmp_data_0_V_fu_823_p5 <= 
        tmp_40_fu_806_p3 when (tmp_41_reg_1068(0) = '1') else 
        tmp_42_fu_813_p1;
    tmp_data_1_V_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_0_V_2_reg_1073),16));
    tmp_data_1_V_fu_866_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_1_V_2_reg_1078),16));
    tmp_data_1_V_fu_866_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_2_V_2_reg_1083),16));
    tmp_data_1_V_fu_866_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_3_V_2_reg_1088),16));
    tmp_data_1_V_fu_866_p5 <= 
        tmp_44_fu_849_p3 when (tmp_193_1_reg_1103(0) = '1') else 
        tmp_45_fu_856_p1;
    tmp_data_2_V_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_0_V_4_reg_1108),16));
    tmp_data_2_V_fu_909_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_1_V_4_reg_1113),16));
    tmp_data_2_V_fu_909_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_2_V_4_reg_1118),16));
    tmp_data_2_V_fu_909_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_3_V_4_reg_1123),16));
    tmp_data_2_V_fu_909_p5 <= 
        tmp_47_fu_892_p3 when (tmp_193_2_reg_1138(0) = '1') else 
        tmp_48_fu_899_p1;
    tmp_data_3_V_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_0_V_7_reg_1143),16));
    tmp_data_3_V_fu_952_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_1_V_7_reg_1148),16));
    tmp_data_3_V_fu_952_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_2_V_7_reg_1153),16));
    tmp_data_3_V_fu_952_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_window_3_V_7_reg_1158),16));
    tmp_data_3_V_fu_952_p5 <= 
        tmp_50_fu_935_p3 when (tmp_193_3_reg_1173(0) = '1') else 
        tmp_51_fu_942_p1;
end behav;
