-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    res_V_data_0_V_TREADY : IN STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TREADY : IN STD_LOGIC;
    res_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_TVALID : OUT STD_LOGIC;
    res_V_data_2_V_TREADY : IN STD_LOGIC;
    res_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_TVALID : OUT STD_LOGIC;
    res_V_data_3_V_TREADY : IN STD_LOGIC;
    data_V_data_0_V_blk_n : OUT STD_LOGIC;
    data_V_data_1_V_blk_n : OUT STD_LOGIC;
    data_V_data_2_V_blk_n : OUT STD_LOGIC;
    data_V_data_3_V_blk_n : OUT STD_LOGIC;
    res_V_data_0_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_1_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_2_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_3_V_TDATA_blk_n : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal exp_table2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table2_ce0 : STD_LOGIC;
    signal exp_table2_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table3_ce0 : STD_LOGIC;
    signal invert_table3_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_data_0_V_1_reg_810 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_0_V0_status : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_data_1_V_1_reg_817 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_1_reg_824 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_1_reg_831 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i_i_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_reg_838 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_i_i8_i_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i8_i_reg_843 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_result_i_i_i_fu_277_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_result_i_i_i_reg_848 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal agg_result_i_i9_i_fu_282_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_result_i_i9_i_reg_853 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i10_i_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i10_i_reg_858 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_863 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_870 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_877 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_884 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_891 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_905 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_912 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_919 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_reg_925 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_reg_931 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_reg_937 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_fu_552_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_reg_943 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_fu_574_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_reg_948 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_596_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_reg_953 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_618_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_958 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_reg_968 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_reg_968_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_reg_968_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_979 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_979_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_979_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_990 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_990_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_990_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_1001 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_1001_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_1001_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_14_fu_662_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_14_reg_1007 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_4_fu_690_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_4_reg_1013 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_11_reg_1019 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_12_reg_1026 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1033 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_778_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_1039 : STD_LOGIC_VECTOR (9 downto 0);
    signal inv_exp_sum_V_reg_1049 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_cast_fu_790_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_5_cast_reg_1054 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_cast_fu_794_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_V_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_cast_fu_798_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_1_V_reg_1074 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_cast_38_fu_802_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_2_V_reg_1084 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_cast_fu_806_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal tmp_7_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_7_1_fu_630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_7_2_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_3_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_data_0_V0_update : STD_LOGIC;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal grp_fu_222_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_222_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_222_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal x_max_V_fu_293_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_298_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_fu_301_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_305_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_1_fu_327_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_1_fu_330_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_2_fu_352_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_2_fu_355_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_3_fu_377_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_3_fu_380_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_s_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i_i_i13_0_not_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i_i_i13_0_not_1_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i_i_i13_0_not_2_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_i_i_i_i13_0_not_3_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_538_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_33_fu_545_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal brmerge1_1_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_1_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_560_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_567_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal brmerge1_2_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_2_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_582_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_15_fu_589_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal brmerge1_3_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_3_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_604_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_18_fu_611_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_fu_642_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_fu_645_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_8_fu_648_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_s_fu_654_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_fu_670_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_fu_673_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_2_fu_676_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_10_fu_682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_1_fu_701_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_V_4_fu_698_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_5_fu_704_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_16_fu_718_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_i_i_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_not_i_i_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_i_i_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_i_i_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_764_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_21_fu_771_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_222_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component materials_net_mul_18s_17ns_26_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_exp_table2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_invert_tHfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table2_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_exp_table2
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table2_address0,
        ce0 => exp_table2_ce0,
        q0 => exp_table2_q0);

    invert_table3_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config21_s_invert_tHfu
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table3_address0,
        ce0 => invert_table3_ce0,
        q0 => invert_table3_q0);

    materials_net_mul_18s_17ns_26_2_1_U462 : component materials_net_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_222_p0,
        din1 => grp_fu_222_p1,
        ce => grp_fu_222_ce,
        dout => grp_fu_222_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                agg_result_i_i9_i_reg_853 <= agg_result_i_i9_i_fu_282_p3;
                agg_result_i_i_i_reg_848 <= agg_result_i_i_i_fu_277_p3;
                exp_res_0_V_reg_968_pp0_iter2_reg <= exp_res_0_V_reg_968;
                exp_res_0_V_reg_968_pp0_iter3_reg <= exp_res_0_V_reg_968_pp0_iter2_reg;
                inv_exp_sum_V_reg_1049 <= invert_table3_q0;
                p_Val2_14_reg_1007 <= p_Val2_14_fu_662_p3;
                p_Val2_4_reg_1013 <= p_Val2_4_fu_690_p3;
                tmp_i10_i_reg_858 <= tmp_i10_i_fu_287_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                exp_res_0_V_reg_968 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                exp_res_1_V_reg_979 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                exp_res_1_V_reg_979_pp0_iter2_reg <= exp_res_1_V_reg_979;
                exp_res_1_V_reg_979_pp0_iter3_reg <= exp_res_1_V_reg_979_pp0_iter2_reg;
                p_Result_11_reg_1019 <= ret_V_5_fu_704_p2(18 downto 18);
                p_Result_12_reg_1026 <= p_Val2_16_fu_718_p2(17 downto 17);
                tmp_10_reg_925 <= ret_V_1_fu_330_p2(15 downto 6);
                tmp_13_reg_931 <= ret_V_2_fu_355_p2(15 downto 6);
                tmp_16_reg_937 <= ret_V_3_fu_380_p2(15 downto 6);
                tmp_19_reg_1033 <= p_Val2_16_fu_718_p2(17 downto 8);
                tmp_22_reg_863 <= ret_V_fu_305_p2(16 downto 16);
                tmp_23_reg_870 <= ret_V_fu_305_p2(15 downto 15);
                tmp_24_reg_877 <= ret_V_1_fu_330_p2(16 downto 16);
                tmp_25_reg_884 <= ret_V_1_fu_330_p2(15 downto 15);
                tmp_26_reg_891 <= ret_V_2_fu_355_p2(16 downto 16);
                tmp_27_reg_898 <= ret_V_2_fu_355_p2(15 downto 15);
                tmp_28_reg_905 <= ret_V_3_fu_380_p2(16 downto 16);
                tmp_29_reg_912 <= ret_V_3_fu_380_p2(15 downto 15);
                tmp_5_cast_reg_1054 <= tmp_5_cast_fu_790_p1;
                tmp_5_reg_919 <= ret_V_fu_305_p2(15 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_2_V_reg_990 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_2_V_reg_990_pp0_iter3_reg <= exp_res_2_V_reg_990;
                exp_res_2_V_reg_990_pp0_iter4_reg <= exp_res_2_V_reg_990_pp0_iter3_reg;
                tmp_data_0_V_1_reg_810 <= data_V_data_0_V_dout;
                tmp_data_1_V_1_reg_817 <= data_V_data_1_V_dout;
                tmp_data_2_V_1_reg_824 <= data_V_data_2_V_dout;
                tmp_data_3_V_1_reg_831 <= data_V_data_3_V_dout;
                y_V_1_reg_948 <= y_V_1_fu_574_p3;
                y_V_2_reg_953 <= y_V_2_fu_596_p3;
                y_V_3_reg_958 <= y_V_3_fu_618_p3;
                y_V_4_reg_1039 <= y_V_4_fu_778_p3;
                y_V_reg_943 <= y_V_fu_552_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                exp_res_3_V_reg_1001 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                exp_res_3_V_reg_1001_pp0_iter3_reg <= exp_res_3_V_reg_1001;
                exp_res_3_V_reg_1001_pp0_iter4_reg <= exp_res_3_V_reg_1001_pp0_iter3_reg;
                tmp_i_i8_i_reg_843 <= tmp_i_i8_i_fu_273_p2;
                tmp_i_i_i_reg_838 <= tmp_i_i_i_fu_269_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_reg_1064 <= grp_fu_222_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_data_1_V_reg_1074 <= grp_fu_222_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_data_2_V_reg_1084 <= grp_fu_222_p2(25 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to4, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    agg_result_i_i9_i_fu_282_p3 <= 
        tmp_data_3_V_1_reg_831 when (tmp_i_i8_i_reg_843(0) = '1') else 
        tmp_data_2_V_1_reg_824;
    agg_result_i_i_i_fu_277_p3 <= 
        tmp_data_1_V_1_reg_817 when (tmp_i_i_i_reg_838(0) = '1') else 
        tmp_data_0_V_1_reg_810;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, data_V_data_0_V0_status)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (data_V_data_0_V0_status = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, data_V_data_0_V0_status)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (data_V_data_0_V0_status = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_0_V_TREADY)
    begin
                ap_block_pp0_stage3_11001 <= ((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, res_V_data_0_V_TREADY)
    begin
                ap_block_pp0_stage3_subdone <= ((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, data_V_data_0_V0_status)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (data_V_data_0_V0_status = ap_const_logic_0));
    end process;

        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_1_fu_476_p2 <= (tmp_25_reg_884 xor tmp_24_reg_877);
    brmerge1_2_fu_500_p2 <= (tmp_27_reg_898 xor tmp_26_reg_891);
    brmerge1_3_fu_524_p2 <= (tmp_29_reg_912 xor tmp_28_reg_905);
    brmerge1_fu_452_p2 <= (tmp_23_reg_870 xor tmp_22_reg_863);
    brmerge2_1_fu_485_p2 <= (tmp_25_reg_884 or signbit_i_i_i_i13_0_not_1_fu_480_p2);
    brmerge2_2_fu_509_p2 <= (tmp_27_reg_898 or signbit_i_i_i_i13_0_not_2_fu_504_p2);
    brmerge2_3_fu_533_p2 <= (tmp_29_reg_912 or signbit_i_i_i_i13_0_not_3_fu_528_p2);
    brmerge2_fu_461_p2 <= (tmp_23_reg_870 or signbit_i_i_i_i13_0_not_fu_456_p2);
    brmerge2_i_i_fu_759_p2 <= (p_Result_not_i_i_fu_754_p2 or p_Result_12_reg_1026);
    brmerge3_i_i_fu_750_p2 <= (p_Result_12_reg_1026 xor p_Result_11_reg_1019);
    data_V_data_0_V0_status <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    data_V_data_0_V0_update_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V0_update <= ap_const_logic_1;
        else 
            data_V_data_0_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_0_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_0_V_read <= data_V_data_0_V0_update;

    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_1_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_1_V_read <= data_V_data_0_V0_update;

    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_2_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_2_V_read <= data_V_data_0_V0_update;

    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_3_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_V_data_3_V_read <= data_V_data_0_V0_update;

    exp_table2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_7_fu_626_p1, ap_block_pp0_stage1, tmp_7_1_fu_630_p1, ap_block_pp0_stage2, tmp_7_2_fu_634_p1, tmp_7_3_fu_638_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table2_address0 <= tmp_7_3_fu_638_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            exp_table2_address0 <= tmp_7_2_fu_634_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            exp_table2_address0 <= tmp_7_1_fu_630_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            exp_table2_address0 <= tmp_7_fu_626_p1(10 - 1 downto 0);
        else 
            exp_table2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            exp_table2_ce0 <= ap_const_logic_1;
        else 
            exp_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_222_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_222_ce <= ap_const_logic_1;
        else 
            grp_fu_222_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_222_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_5_cast_fu_790_p1, tmp_5_cast_reg_1054, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_222_p0 <= tmp_5_cast_reg_1054(18 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_222_p0 <= tmp_5_cast_fu_790_p1(18 - 1 downto 0);
        else 
            grp_fu_222_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_222_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, r_V_cast_fu_794_p1, r_V_1_cast_fu_798_p1, r_V_cast_38_fu_802_p1, r_V_3_cast_fu_806_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_222_p1 <= r_V_3_cast_fu_806_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_222_p1 <= r_V_cast_38_fu_802_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_222_p1 <= r_V_1_cast_fu_798_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_222_p1 <= r_V_cast_fu_794_p1(17 - 1 downto 0);
        else 
            grp_fu_222_p1 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    invert_table3_address0 <= tmp_4_fu_786_p1(10 - 1 downto 0);

    invert_table3_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            invert_table3_ce0 <= ap_const_logic_1;
        else 
            invert_table3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        lhs_V_1_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_1_V_1_reg_817),17));

        lhs_V_2_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_2_V_1_reg_824),17));

        lhs_V_3_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_3_V_1_reg_831),17));

        lhs_V_4_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_14_reg_1007),19));

        lhs_V_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_0_V_1_reg_810),17));

    p_Result_10_fu_682_p3 <= p_Val2_2_fu_676_p2(17 downto 17);
    p_Result_not_i_i_fu_754_p2 <= (p_Result_11_reg_1019 xor ap_const_lv1_1);
    p_Result_s_fu_654_p3 <= p_Val2_8_fu_648_p2(17 downto 17);
    p_Val2_14_fu_662_p3 <= 
        ap_const_lv18_1FFFF when (p_Result_s_fu_654_p3(0) = '1') else 
        p_Val2_8_fu_648_p2;
    p_Val2_16_fu_718_p2 <= std_logic_vector(signed(p_Val2_14_reg_1007) + signed(p_Val2_4_reg_1013));
    p_Val2_1_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_reg_1001),18));
    p_Val2_2_fu_676_p2 <= std_logic_vector(unsigned(p_Val2_9_fu_670_p1) + unsigned(p_Val2_1_fu_673_p1));
    p_Val2_4_fu_690_p3 <= 
        ap_const_lv18_1FFFF when (p_Result_10_fu_682_p3(0) = '1') else 
        p_Val2_2_fu_676_p2;
    p_Val2_6_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_reg_968),18));
    p_Val2_7_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_reg_979),18));
    p_Val2_8_fu_648_p2 <= std_logic_vector(unsigned(p_Val2_6_fu_642_p1) + unsigned(p_Val2_7_fu_645_p1));
    p_Val2_9_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_reg_990),18));
    r_V_1_cast_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_reg_979_pp0_iter3_reg),26));
    r_V_3_cast_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_reg_1001_pp0_iter4_reg),26));
    r_V_cast_38_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_reg_990_pp0_iter4_reg),26));
    r_V_cast_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_reg_968_pp0_iter3_reg),26));
    res_V_data_0_V_TDATA <= tmp_data_0_V_reg_1064;

    res_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, res_V_data_0_V_TREADY, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            res_V_data_0_V_TDATA_blk_n <= res_V_data_0_V_TREADY;
        else 
            res_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_0_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_0_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_0_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_1_V_TDATA <= tmp_data_1_V_reg_1074;

    res_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, res_V_data_1_V_TREADY, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            res_V_data_1_V_TDATA_blk_n <= res_V_data_1_V_TREADY;
        else 
            res_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_1_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_1_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_1_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_2_V_TDATA <= tmp_data_2_V_reg_1084;

    res_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, res_V_data_2_V_TREADY, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            res_V_data_2_V_TDATA_blk_n <= res_V_data_2_V_TREADY;
        else 
            res_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_2_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_2_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_2_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_3_V_TDATA <= grp_fu_222_p2(25 downto 10);

    res_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, res_V_data_3_V_TREADY, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            res_V_data_3_V_TDATA_blk_n <= res_V_data_3_V_TREADY;
        else 
            res_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_3_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_3_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_3_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_330_p2 <= std_logic_vector(signed(lhs_V_1_fu_327_p1) - signed(rhs_V_fu_301_p1));
    ret_V_2_fu_355_p2 <= std_logic_vector(signed(lhs_V_2_fu_352_p1) - signed(rhs_V_fu_301_p1));
    ret_V_3_fu_380_p2 <= std_logic_vector(signed(lhs_V_3_fu_377_p1) - signed(rhs_V_fu_301_p1));
    ret_V_5_fu_704_p2 <= std_logic_vector(signed(rhs_V_1_fu_701_p1) + signed(lhs_V_4_fu_698_p1));
    ret_V_fu_305_p2 <= std_logic_vector(signed(lhs_V_fu_298_p1) - signed(rhs_V_fu_301_p1));
        rhs_V_1_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1013),19));

        rhs_V_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_293_p3),17));

    signbit_i_i_i_i13_0_not_1_fu_480_p2 <= (tmp_24_reg_877 xor ap_const_lv1_1);
    signbit_i_i_i_i13_0_not_2_fu_504_p2 <= (tmp_26_reg_891 xor ap_const_lv1_1);
    signbit_i_i_i_i13_0_not_3_fu_528_p2 <= (tmp_28_reg_905 xor ap_const_lv1_1);
    signbit_i_i_i_i13_0_not_fu_456_p2 <= (tmp_22_reg_863 xor ap_const_lv1_1);
    tmp_11_fu_560_p3 <= 
        ap_const_lv10_1FF when (brmerge1_1_fu_476_p2(0) = '1') else 
        tmp_10_reg_925;
    tmp_12_fu_567_p3 <= 
        ap_const_lv10_200 when (underflow_1_fu_471_p2(0) = '1') else 
        tmp_10_reg_925;
    tmp_14_fu_582_p3 <= 
        ap_const_lv10_1FF when (brmerge1_2_fu_500_p2(0) = '1') else 
        tmp_13_reg_931;
    tmp_15_fu_589_p3 <= 
        ap_const_lv10_200 when (underflow_2_fu_495_p2(0) = '1') else 
        tmp_13_reg_931;
    tmp_17_fu_604_p3 <= 
        ap_const_lv10_1FF when (brmerge1_3_fu_524_p2(0) = '1') else 
        tmp_16_reg_937;
    tmp_18_fu_611_p3 <= 
        ap_const_lv10_200 when (underflow_3_fu_519_p2(0) = '1') else 
        tmp_16_reg_937;
    tmp_1_fu_466_p2 <= (tmp_25_reg_884 xor ap_const_lv1_1);
    tmp_20_fu_764_p3 <= 
        ap_const_lv10_1FF when (brmerge3_i_i_fu_750_p2(0) = '1') else 
        tmp_19_reg_1033;
    tmp_21_fu_771_p3 <= 
        ap_const_lv10_200 when (underflow_4_fu_745_p2(0) = '1') else 
        tmp_19_reg_1033;
    tmp_2_33_fu_545_p3 <= 
        ap_const_lv10_200 when (underflow_fu_447_p2(0) = '1') else 
        tmp_5_reg_919;
    tmp_2_fu_490_p2 <= (tmp_27_reg_898 xor ap_const_lv1_1);
    tmp_3_fu_514_p2 <= (tmp_29_reg_912 xor ap_const_lv1_1);
    tmp_4_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_reg_1039),64));
        tmp_5_cast_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_1049),26));

    tmp_7_1_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_reg_948),64));
    tmp_7_2_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_reg_953),64));
    tmp_7_3_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_reg_958),64));
    tmp_7_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_943),64));
    tmp_9_fu_538_p3 <= 
        ap_const_lv10_1FF when (brmerge1_fu_452_p2(0) = '1') else 
        tmp_5_reg_919;
    tmp_i10_i_fu_287_p2 <= "1" when (signed(agg_result_i_i_i_fu_277_p3) < signed(agg_result_i_i9_i_fu_282_p3)) else "0";
    tmp_i_i8_i_fu_273_p2 <= "1" when (signed(tmp_data_2_V_1_reg_824) < signed(tmp_data_3_V_1_reg_831)) else "0";
    tmp_i_i_fu_740_p2 <= (p_Result_12_reg_1026 xor ap_const_lv1_1);
    tmp_i_i_i_fu_269_p2 <= "1" when (signed(tmp_data_0_V_1_reg_810) < signed(tmp_data_1_V_1_reg_817)) else "0";
    tmp_s_fu_442_p2 <= (tmp_23_reg_870 xor ap_const_lv1_1);
    underflow_1_fu_471_p2 <= (tmp_24_reg_877 and tmp_1_fu_466_p2);
    underflow_2_fu_495_p2 <= (tmp_2_fu_490_p2 and tmp_26_reg_891);
    underflow_3_fu_519_p2 <= (tmp_3_fu_514_p2 and tmp_28_reg_905);
    underflow_4_fu_745_p2 <= (tmp_i_i_fu_740_p2 and p_Result_11_reg_1019);
    underflow_fu_447_p2 <= (tmp_s_fu_442_p2 and tmp_22_reg_863);
    x_max_V_fu_293_p3 <= 
        agg_result_i_i9_i_reg_853 when (tmp_i10_i_reg_858(0) = '1') else 
        agg_result_i_i_i_reg_848;
    y_V_1_fu_574_p3 <= 
        tmp_11_fu_560_p3 when (brmerge2_1_fu_485_p2(0) = '1') else 
        tmp_12_fu_567_p3;
    y_V_2_fu_596_p3 <= 
        tmp_14_fu_582_p3 when (brmerge2_2_fu_509_p2(0) = '1') else 
        tmp_15_fu_589_p3;
    y_V_3_fu_618_p3 <= 
        tmp_17_fu_604_p3 when (brmerge2_3_fu_533_p2(0) = '1') else 
        tmp_18_fu_611_p3;
    y_V_4_fu_778_p3 <= 
        tmp_20_fu_764_p3 when (brmerge2_i_i_fu_759_p2(0) = '1') else 
        tmp_21_fu_771_p3;
    y_V_fu_552_p3 <= 
        tmp_9_fu_538_p3 when (brmerge2_fu_461_p2(0) = '1') else 
        tmp_2_33_fu_545_p3;
end behav;
