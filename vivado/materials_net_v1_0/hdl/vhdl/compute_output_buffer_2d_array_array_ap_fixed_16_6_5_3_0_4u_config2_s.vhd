-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_elem_data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    res_stream_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_3_V_blk_n : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_data_V_1405 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2406 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_4408 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_5409 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal or_cond6_reg_508 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_data_V_s_reg_463 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_reg_468 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_reg_473 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1405_ret_reg_478 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2406_ret_reg_483 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_4408_ret_reg_488 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5409_ret_reg_493 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_7_ret_reg_498 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_8_ret_reg_503 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond6_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_512 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_fu_378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in_reg_516 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_521 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in3_fu_422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in3_reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_out_0_V_reg_530 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal res_out_1_V_reg_535 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_2_V_reg_540 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_3_V_reg_545 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_done : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_idle : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ready : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start : STD_LOGIC;
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_done : STD_LOGIC;
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_idle : STD_LOGIC;
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ready : STD_LOGIC;
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce : STD_LOGIC;
    signal storemerge_reg_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm_state2 : STD_LOGIC;
    signal res_stream_V_data_0_V1_update : STD_LOGIC;
    signal res_stream_V_data_0_V1_status : STD_LOGIC;
    signal ap_block_state6 : BOOLEAN;
    signal tmp_65_fu_404_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_462_fu_300_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_463_fu_320_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_s_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_fu_372_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp3_fu_416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_75 : BOOLEAN;
    signal ap_condition_449 : BOOLEAN;
    signal ap_condition_453 : BOOLEAN;
    signal ap_condition_448 : BOOLEAN;
    signal ap_condition_459 : BOOLEAN;

    component dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145 : component dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start,
        ap_done => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_done,
        ap_idle => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_idle,
        ap_ready => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ready,
        data_0_V_read => kernel_data_V_2_reg_473,
        data_1_V_read => kernel_data_V_1405_ret_reg_478,
        data_2_V_read => kernel_data_V_2406_ret_reg_483,
        data_3_V_read => kernel_data_V_1_reg_468,
        data_4_V_read => kernel_data_V_4408_ret_reg_488,
        data_5_V_read => kernel_data_V_5409_ret_reg_493,
        data_6_V_read => kernel_data_V_s_reg_463,
        data_7_V_read => kernel_data_V_7_ret_reg_498,
        data_8_V_read => kernel_data_V_8_ret_reg_503,
        ap_return_0 => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_3,
        ap_ce => grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce);

    call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158 : component shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start,
        ap_done => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_done,
        ap_idle => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_idle,
        ap_ready => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ready,
        in_elem_data_V_read => in_elem_data_V_read,
        kernel_window_1_V_read => kernel_data_V_1405,
        kernel_window_2_V_read => kernel_data_V_2406,
        kernel_window_4_V_read => kernel_data_V_4408,
        kernel_window_5_V_read => kernel_data_V_5409,
        kernel_window_7_V_read => kernel_data_V_7,
        kernel_window_8_V_read => kernel_data_V_8,
        ap_return_0 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_0,
        ap_return_1 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_1,
        ap_return_2 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_2,
        ap_return_3 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_3,
        ap_return_4 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_4,
        ap_return_5 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_5,
        ap_return_6 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_6,
        ap_return_7 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_7,
        ap_return_8 => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_8,
        ap_ce => call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg <= ap_const_logic_0;
            else
                if (((or_cond6_fu_348_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_NS_fsm_state2))) then 
                    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    pX_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_75)) then
                if ((tmp_62_fu_354_p2 = ap_const_lv1_1)) then 
                    pX_5 <= ap_const_lv32_0;
                elsif ((tmp_62_fu_354_p2 = ap_const_lv1_0)) then 
                    pX_5 <= tmp_64_fu_360_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_453)) then 
                    pY_5 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_449)) then 
                    pY_5 <= tmp_65_fu_404_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (((tmp_62_reg_512 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    sX_5 <= p_in_reg_516;
                elsif ((ap_const_boolean_1 = ap_condition_448)) then 
                    sX_5 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    storemerge_reg_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_459)) then
                if ((tmp_63_reg_521 = ap_const_lv1_1)) then 
                    storemerge_reg_134 <= ap_const_lv32_0;
                elsif ((tmp_63_reg_521 = ap_const_lv1_0)) then 
                    storemerge_reg_134 <= p_in3_reg_525;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                kernel_data_V_1405 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_3;
                kernel_data_V_1405_ret_reg_478 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_3;
                kernel_data_V_1_reg_468 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_1;
                kernel_data_V_2406 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_4;
                kernel_data_V_2406_ret_reg_483 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_4;
                kernel_data_V_2_reg_473 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_0;
                kernel_data_V_4408 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_5;
                kernel_data_V_4408_ret_reg_488 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_5;
                kernel_data_V_5409 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_6;
                kernel_data_V_5409_ret_reg_493 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_6;
                kernel_data_V_7 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_7;
                kernel_data_V_7_ret_reg_498 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_7;
                kernel_data_V_8 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_8;
                kernel_data_V_8_ret_reg_503 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_8;
                kernel_data_V_s_reg_463 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_2;
                or_cond6_reg_508 <= or_cond6_fu_348_p2;
                tmp_62_reg_512 <= tmp_62_fu_354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_63_fu_398_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (tmp_62_fu_354_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_in3_reg_525 <= p_in3_fu_422_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_62_fu_354_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_in_reg_516 <= p_in_fu_378_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (or_cond6_reg_508 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                res_out_0_V_reg_530 <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_0;
                res_out_1_V_reg_535 <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_1;
                res_out_2_V_reg_540 <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_2;
                res_out_3_V_reg_545 <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (tmp_62_reg_512 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                sY_5 <= storemerge_reg_134;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (tmp_62_fu_354_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_63_reg_521 <= tmp_63_fu_398_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state6, or_cond6_reg_508, ap_ce, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, res_stream_V_data_0_V1_status)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((or_cond6_reg_508 = ap_const_lv1_1) and (res_stream_V_data_0_V1_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_NS_fsm_state2 <= ap_NS_fsm(1);

    ap_block_state6_assign_proc : process(or_cond6_reg_508, res_stream_V_data_0_V1_status)
    begin
                ap_block_state6 <= ((or_cond6_reg_508 = ap_const_lv1_1) and (res_stream_V_data_0_V1_status = ap_const_logic_0));
    end process;


    ap_condition_448_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_62_fu_354_p2)
    begin
                ap_condition_448 <= ((tmp_62_fu_354_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1));
    end process;


    ap_condition_449_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_62_fu_354_p2, tmp_63_fu_398_p2)
    begin
                ap_condition_449 <= ((tmp_63_fu_398_p2 = ap_const_lv1_0) and (tmp_62_fu_354_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1));
    end process;


    ap_condition_453_assign_proc : process(tmp_62_reg_512, tmp_63_reg_521, ap_CS_fsm_state2)
    begin
                ap_condition_453 <= ((tmp_62_reg_512 = ap_const_lv1_1) and (tmp_63_reg_521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_condition_459_assign_proc : process(ap_ce, tmp_62_reg_512, ap_CS_fsm_state2)
    begin
                ap_condition_459 <= ((ap_const_logic_1 = ap_ce) and (tmp_62_reg_512 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_condition_75_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
                ap_condition_75 <= ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6, or_cond6_reg_508, ap_ce, res_stream_V_data_0_V1_status)
    begin
        if (((not(((or_cond6_reg_508 = ap_const_lv1_1) and (res_stream_V_data_0_V1_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, or_cond6_reg_508, ap_ce, res_stream_V_data_0_V1_status)
    begin
        if ((not(((or_cond6_reg_508 = ap_const_lv1_1) and (res_stream_V_data_0_V1_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce <= ap_const_logic_1;
        else 
            call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start <= ap_const_logic_1;
        else 
            call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce_assign_proc : process(ap_ce, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg;
    icmp4_fu_330_p2 <= "1" when (signed(tmp_463_fu_320_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_fu_310_p2 <= "1" when (signed(tmp_462_fu_300_p4) > signed(ap_const_lv31_0)) else "0";
    or_cond6_fu_348_p2 <= (tmp_fu_336_p2 and tmp1_fu_342_p2);
    p_in3_fu_422_p3 <= 
        ap_const_lv32_1 when (tmp_59_fu_290_p2(0) = '1') else 
        phitmp3_fu_416_p2;
    p_in_fu_378_p3 <= 
        ap_const_lv32_1 when (tmp_s_fu_280_p2(0) = '1') else 
        phitmp_fu_372_p2;
    phitmp3_fu_416_p2 <= std_logic_vector(unsigned(sY_5) + unsigned(ap_const_lv32_1));
    phitmp_fu_372_p2 <= std_logic_vector(unsigned(sX_5) + unsigned(ap_const_lv32_1));
    res_stream_V_data_0_V1_status <= (res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V1_update_assign_proc : process(ap_CS_fsm_state6, or_cond6_reg_508, ap_ce, res_stream_V_data_0_V1_status)
    begin
        if ((not(((or_cond6_reg_508 = ap_const_lv1_1) and (res_stream_V_data_0_V1_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (or_cond6_reg_508 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            res_stream_V_data_0_V1_update <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_0_V_blk_n_assign_proc : process(res_stream_V_data_0_V_full_n, ap_CS_fsm_state6, or_cond6_reg_508)
    begin
        if (((or_cond6_reg_508 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= res_out_0_V_reg_530;
    res_stream_V_data_0_V_write <= res_stream_V_data_0_V1_update;

    res_stream_V_data_1_V_blk_n_assign_proc : process(res_stream_V_data_1_V_full_n, ap_CS_fsm_state6, or_cond6_reg_508)
    begin
        if (((or_cond6_reg_508 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= res_out_1_V_reg_535;
    res_stream_V_data_1_V_write <= res_stream_V_data_0_V1_update;

    res_stream_V_data_2_V_blk_n_assign_proc : process(res_stream_V_data_2_V_full_n, ap_CS_fsm_state6, or_cond6_reg_508)
    begin
        if (((or_cond6_reg_508 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= res_out_2_V_reg_540;
    res_stream_V_data_2_V_write <= res_stream_V_data_0_V1_update;

    res_stream_V_data_3_V_blk_n_assign_proc : process(res_stream_V_data_3_V_full_n, ap_CS_fsm_state6, or_cond6_reg_508)
    begin
        if (((or_cond6_reg_508 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= res_out_3_V_reg_545;
    res_stream_V_data_3_V_write <= res_stream_V_data_0_V1_update;
    tmp1_fu_342_p2 <= (icmp_fu_310_p2 and icmp4_fu_330_p2);
    tmp_462_fu_300_p4 <= pY_5(31 downto 1);
    tmp_463_fu_320_p4 <= pX_5(31 downto 1);
    tmp_59_fu_290_p2 <= "1" when (sY_5 = ap_const_lv32_2) else "0";
    tmp_62_fu_354_p2 <= "1" when (pX_5 = ap_const_lv32_9F) else "0";
    tmp_63_fu_398_p2 <= "1" when (pY_5 = ap_const_lv32_77) else "0";
    tmp_64_fu_360_p2 <= std_logic_vector(unsigned(pX_5) + unsigned(ap_const_lv32_1));
    tmp_65_fu_404_p2 <= std_logic_vector(unsigned(pY_5) + unsigned(ap_const_lv32_1));
    tmp_fu_336_p2 <= (tmp_s_fu_280_p2 and tmp_59_fu_290_p2);
    tmp_s_fu_280_p2 <= "1" when (sX_5 = ap_const_lv32_2) else "0";
end behav;
