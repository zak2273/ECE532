// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_elem_data_V_read,
        res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n,
        res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n,
        res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n,
        res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n,
        res_stream_V_data_3_V_write,
        res_stream_V_data_0_V_blk_n,
        res_stream_V_data_1_V_blk_n,
        res_stream_V_data_2_V_blk_n,
        res_stream_V_data_3_V_blk_n,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_elem_data_V_read;
output  [15:0] res_stream_V_data_0_V_din;
input   res_stream_V_data_0_V_full_n;
output   res_stream_V_data_0_V_write;
output  [15:0] res_stream_V_data_1_V_din;
input   res_stream_V_data_1_V_full_n;
output   res_stream_V_data_1_V_write;
output  [15:0] res_stream_V_data_2_V_din;
input   res_stream_V_data_2_V_full_n;
output   res_stream_V_data_2_V_write;
output  [15:0] res_stream_V_data_3_V_din;
input   res_stream_V_data_3_V_full_n;
output   res_stream_V_data_3_V_write;
output   res_stream_V_data_0_V_blk_n;
output   res_stream_V_data_1_V_blk_n;
output   res_stream_V_data_2_V_blk_n;
output   res_stream_V_data_3_V_blk_n;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg res_stream_V_data_0_V_blk_n;
reg res_stream_V_data_1_V_blk_n;
reg res_stream_V_data_2_V_blk_n;
reg res_stream_V_data_3_V_blk_n;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] kernel_data_V_1405;
reg   [15:0] kernel_data_V_2406;
reg   [15:0] kernel_data_V_4408;
reg   [15:0] kernel_data_V_5409;
reg   [15:0] kernel_data_V_7;
reg   [15:0] kernel_data_V_8;
reg   [31:0] sX_5;
reg   [31:0] sY_5;
reg   [31:0] pY_5;
reg   [31:0] pX_5;
wire    ap_CS_fsm_state6;
reg   [0:0] or_cond6_reg_508;
reg   [15:0] kernel_data_V_s_reg_463;
reg   [15:0] kernel_data_V_1_reg_468;
reg   [15:0] kernel_data_V_2_reg_473;
reg   [15:0] kernel_data_V_1405_ret_reg_478;
reg   [15:0] kernel_data_V_2406_ret_reg_483;
reg   [15:0] kernel_data_V_4408_ret_reg_488;
reg   [15:0] kernel_data_V_5409_ret_reg_493;
reg   [15:0] kernel_data_V_7_ret_reg_498;
reg   [15:0] kernel_data_V_8_ret_reg_503;
wire   [0:0] or_cond6_fu_348_p2;
wire   [0:0] tmp_62_fu_354_p2;
reg   [0:0] tmp_62_reg_512;
wire   [31:0] p_in_fu_378_p3;
reg   [31:0] p_in_reg_516;
wire   [0:0] tmp_63_fu_398_p2;
reg   [0:0] tmp_63_reg_521;
wire   [31:0] p_in3_fu_422_p3;
reg   [31:0] p_in3_reg_525;
reg   [15:0] res_out_0_V_reg_530;
wire    ap_CS_fsm_state5;
reg   [15:0] res_out_1_V_reg_535;
reg   [15:0] res_out_2_V_reg_540;
reg   [15:0] res_out_3_V_reg_545;
wire    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start;
wire    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_done;
wire    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_idle;
wire    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ready;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_2;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_3;
reg    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start;
wire    call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_done;
wire    call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_idle;
wire    call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ready;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_0;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_1;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_2;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_3;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_4;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_5;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_6;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_7;
wire   [15:0] call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_8;
reg    call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce;
reg   [31:0] storemerge_reg_134;
reg    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg;
reg   [5:0] ap_NS_fsm;
wire    ap_NS_fsm_state2;
reg    res_stream_V_data_0_V1_update;
wire    res_stream_V_data_0_V1_status;
reg    ap_block_state6;
wire   [31:0] tmp_65_fu_404_p2;
wire   [31:0] tmp_64_fu_360_p2;
wire   [30:0] tmp_462_fu_300_p4;
wire   [30:0] tmp_463_fu_320_p4;
wire   [0:0] tmp_s_fu_280_p2;
wire   [0:0] tmp_59_fu_290_p2;
wire   [0:0] icmp_fu_310_p2;
wire   [0:0] icmp4_fu_330_p2;
wire   [0:0] tmp1_fu_342_p2;
wire   [0:0] tmp_fu_336_p2;
wire   [31:0] phitmp_fu_372_p2;
wire   [31:0] phitmp3_fu_416_p2;
reg    ap_condition_75;
reg    ap_condition_449;
reg    ap_condition_453;
reg    ap_condition_448;
reg    ap_condition_459;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 kernel_data_V_1405 = 16'd0;
#0 kernel_data_V_2406 = 16'd0;
#0 kernel_data_V_4408 = 16'd0;
#0 kernel_data_V_5409 = 16'd0;
#0 kernel_data_V_7 = 16'd0;
#0 kernel_data_V_8 = 16'd0;
#0 sX_5 = 32'd0;
#0 sY_5 = 32'd0;
#0 pY_5 = 32'd0;
#0 pX_5 = 32'd0;
#0 grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg = 1'b0;
end

dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ready),
    .data_0_V_read(kernel_data_V_2_reg_473),
    .data_1_V_read(kernel_data_V_1405_ret_reg_478),
    .data_2_V_read(kernel_data_V_2406_ret_reg_483),
    .data_3_V_read(kernel_data_V_1_reg_468),
    .data_4_V_read(kernel_data_V_4408_ret_reg_488),
    .data_5_V_read(kernel_data_V_5409_ret_reg_493),
    .data_6_V_read(kernel_data_V_s_reg_463),
    .data_7_V_read(kernel_data_V_7_ret_reg_498),
    .data_8_V_read(kernel_data_V_8_ret_reg_503),
    .ap_return_0(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_3),
    .ap_ce(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce)
);

shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start),
    .ap_done(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_done),
    .ap_idle(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_idle),
    .ap_ready(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ready),
    .in_elem_data_V_read(in_elem_data_V_read),
    .kernel_window_1_V_read(kernel_data_V_1405),
    .kernel_window_2_V_read(kernel_data_V_2406),
    .kernel_window_4_V_read(kernel_data_V_4408),
    .kernel_window_5_V_read(kernel_data_V_5409),
    .kernel_window_7_V_read(kernel_data_V_7),
    .kernel_window_8_V_read(kernel_data_V_8),
    .ap_return_0(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_0),
    .ap_return_1(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_1),
    .ap_return_2(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_2),
    .ap_return_3(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_3),
    .ap_return_4(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_4),
    .ap_return_5(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_5),
    .ap_return_6(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_6),
    .ap_return_7(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_7),
    .ap_return_8(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_8),
    .ap_ce(call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg <= 1'b0;
    end else begin
        if (((or_cond6_fu_348_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (1'b1 == ap_NS_fsm_state2))) begin
            grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_75)) begin
        if ((tmp_62_fu_354_p2 == 1'd1)) begin
            pX_5 <= 32'd0;
        end else if ((tmp_62_fu_354_p2 == 1'd0)) begin
            pX_5 <= tmp_64_fu_360_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_453)) begin
            pY_5 <= 32'd0;
        end else if ((1'b1 == ap_condition_449)) begin
            pY_5 <= tmp_65_fu_404_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((tmp_62_reg_512 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            sX_5 <= p_in_reg_516;
        end else if ((1'b1 == ap_condition_448)) begin
            sX_5 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_459)) begin
        if ((tmp_63_reg_521 == 1'd1)) begin
            storemerge_reg_134 <= 32'd0;
        end else if ((tmp_63_reg_521 == 1'd0)) begin
            storemerge_reg_134 <= p_in3_reg_525;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kernel_data_V_1405 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_3;
        kernel_data_V_1405_ret_reg_478 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_3;
        kernel_data_V_1_reg_468 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_1;
        kernel_data_V_2406 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_4;
        kernel_data_V_2406_ret_reg_483 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_4;
        kernel_data_V_2_reg_473 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_0;
        kernel_data_V_4408 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_5;
        kernel_data_V_4408_ret_reg_488 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_5;
        kernel_data_V_5409 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_6;
        kernel_data_V_5409_ret_reg_493 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_6;
        kernel_data_V_7 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_7;
        kernel_data_V_7_ret_reg_498 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_7;
        kernel_data_V_8 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_8;
        kernel_data_V_8_ret_reg_503 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_8;
        kernel_data_V_s_reg_463 <= call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_return_2;
        or_cond6_reg_508 <= or_cond6_fu_348_p2;
        tmp_62_reg_512 <= tmp_62_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_63_fu_398_p2 == 1'd0) & (1'b1 == ap_ce) & (tmp_62_fu_354_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_in3_reg_525 <= p_in3_fu_422_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_62_fu_354_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_in_reg_516 <= p_in_fu_378_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (or_cond6_reg_508 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        res_out_0_V_reg_530 <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_0;
        res_out_1_V_reg_535 <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_1;
        res_out_2_V_reg_540 <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_2;
        res_out_3_V_reg_545 <= grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (tmp_62_reg_512 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        sY_5 <= storemerge_reg_134;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (tmp_62_fu_354_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_63_reg_521 <= tmp_63_fu_398_p2;
    end
end

always @ (*) begin
    if (((~((or_cond6_reg_508 == 1'd1) & (res_stream_V_data_0_V1_status == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state6)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((or_cond6_reg_508 == 1'd1) & (res_stream_V_data_0_V1_status == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce = 1'b1;
    end else begin
        call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start = 1'b1;
    end else begin
        call_ret3_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_158_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5)))) begin
        grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((or_cond6_reg_508 == 1'd1) & (res_stream_V_data_0_V1_status == 1'b0)) & (1'b1 == ap_ce) & (or_cond6_reg_508 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        res_stream_V_data_0_V1_update = 1'b1;
    end else begin
        res_stream_V_data_0_V1_update = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond6_reg_508 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n;
    end else begin
        res_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond6_reg_508 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n;
    end else begin
        res_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond6_reg_508 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n;
    end else begin
        res_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond6_reg_508 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n;
    end else begin
        res_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((or_cond6_reg_508 == 1'd1) & (res_stream_V_data_0_V1_status == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_NS_fsm_state2 = ap_NS_fsm[32'd1];

always @ (*) begin
    ap_block_state6 = ((or_cond6_reg_508 == 1'd1) & (res_stream_V_data_0_V1_status == 1'b0));
end

always @ (*) begin
    ap_condition_448 = ((tmp_62_fu_354_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_condition_449 = ((tmp_63_fu_398_p2 == 1'd0) & (tmp_62_fu_354_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_condition_453 = ((tmp_62_reg_512 == 1'd1) & (tmp_63_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state2));
end

always @ (*) begin
    ap_condition_459 = ((1'b1 == ap_ce) & (tmp_62_reg_512 == 1'd1) & (1'b1 == ap_CS_fsm_state2));
end

always @ (*) begin
    ap_condition_75 = ((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1));
end

assign grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start = grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_145_ap_start_reg;

assign icmp4_fu_330_p2 = (($signed(tmp_463_fu_320_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_310_p2 = (($signed(tmp_462_fu_300_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign or_cond6_fu_348_p2 = (tmp_fu_336_p2 & tmp1_fu_342_p2);

assign p_in3_fu_422_p3 = ((tmp_59_fu_290_p2[0:0] === 1'b1) ? 32'd1 : phitmp3_fu_416_p2);

assign p_in_fu_378_p3 = ((tmp_s_fu_280_p2[0:0] === 1'b1) ? 32'd1 : phitmp_fu_372_p2);

assign phitmp3_fu_416_p2 = (sY_5 + 32'd1);

assign phitmp_fu_372_p2 = (sX_5 + 32'd1);

assign res_stream_V_data_0_V1_status = (res_stream_V_data_3_V_full_n & res_stream_V_data_2_V_full_n & res_stream_V_data_1_V_full_n & res_stream_V_data_0_V_full_n);

assign res_stream_V_data_0_V_din = res_out_0_V_reg_530;

assign res_stream_V_data_0_V_write = res_stream_V_data_0_V1_update;

assign res_stream_V_data_1_V_din = res_out_1_V_reg_535;

assign res_stream_V_data_1_V_write = res_stream_V_data_0_V1_update;

assign res_stream_V_data_2_V_din = res_out_2_V_reg_540;

assign res_stream_V_data_2_V_write = res_stream_V_data_0_V1_update;

assign res_stream_V_data_3_V_din = res_out_3_V_reg_545;

assign res_stream_V_data_3_V_write = res_stream_V_data_0_V1_update;

assign tmp1_fu_342_p2 = (icmp_fu_310_p2 & icmp4_fu_330_p2);

assign tmp_462_fu_300_p4 = {{pY_5[31:1]}};

assign tmp_463_fu_320_p4 = {{pX_5[31:1]}};

assign tmp_59_fu_290_p2 = ((sY_5 == 32'd2) ? 1'b1 : 1'b0);

assign tmp_62_fu_354_p2 = ((pX_5 == 32'd159) ? 1'b1 : 1'b0);

assign tmp_63_fu_398_p2 = ((pY_5 == 32'd119) ? 1'b1 : 1'b0);

assign tmp_64_fu_360_p2 = (pX_5 + 32'd1);

assign tmp_65_fu_404_p2 = (pY_5 + 32'd1);

assign tmp_fu_336_p2 = (tmp_s_fu_280_p2 & tmp_59_fu_290_p2);

assign tmp_s_fu_280_p2 = ((sX_5 == 32'd2) ? 1'b1 : 1'b0);

endmodule //compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s
