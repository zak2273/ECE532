// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
input  [15:0] data_4_V_read;
input  [15:0] data_5_V_read;
input  [15:0] data_6_V_read;
input  [15:0] data_7_V_read;
input  [15:0] data_8_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [15:0] data_7_V_read13_reg_1246;
reg  signed [15:0] data_5_V_read11_reg_1251;
wire  signed [20:0] r_V_0_cast_fu_276_p1;
reg   [15:0] tmp_109_reg_1265;
reg   [11:0] tmp_s_reg_1270;
reg   [15:0] tmp_314_0_3_reg_1275;
wire  signed [20:0] r_V_2_cast_fu_331_p1;
reg   [15:0] tmp_314_2_reg_1285;
reg   [15:0] tmp_314_2_3_reg_1291;
wire  signed [20:0] r_V_3_cast_fu_380_p1;
reg   [15:0] tmp_314_3_1_reg_1301;
reg   [13:0] tmp_355_reg_1307;
reg   [11:0] tmp_356_reg_1312;
wire  signed [20:0] r_V_7_cast_fu_457_p1;
wire   [20:0] p_neg_fu_474_p2;
reg   [20:0] p_neg_reg_1322;
reg   [15:0] tmp_314_7_2_reg_1327;
reg   [15:0] tmp_314_7_3_reg_1332;
reg   [15:0] tmp_314_8_reg_1337;
reg   [15:0] tmp_314_8_1_reg_1342;
reg   [14:0] tmp_360_reg_1347;
reg   [13:0] tmp_362_reg_1352;
reg   [15:0] tmp_314_0_2_reg_1357;
wire    ap_CS_fsm_state2;
reg   [15:0] tmp_314_1_reg_1362;
reg   [15:0] tmp_314_1_1_reg_1368;
reg   [15:0] tmp_314_1_3_reg_1373;
reg   [15:0] tmp_314_2_1_reg_1378;
reg   [15:0] tmp_314_3_reg_1383;
reg   [15:0] tmp_314_4_reg_1388;
reg   [15:0] tmp_314_4_1_reg_1393;
reg   [15:0] tmp_314_4_2_reg_1398;
reg   [15:0] tmp_314_4_3_reg_1403;
reg   [15:0] tmp_314_5_reg_1408;
reg   [15:0] tmp_314_5_1_reg_1413;
reg   [14:0] tmp_357_reg_1418;
reg   [15:0] tmp_314_6_1_reg_1423;
reg   [15:0] tmp_314_6_2_reg_1428;
reg   [15:0] tmp_314_7_reg_1434;
reg   [15:0] tmp_314_7_1_reg_1439;
wire   [15:0] tmp45_fu_1035_p2;
reg   [15:0] tmp45_reg_1444;
wire   [15:0] tmp53_fu_1050_p2;
reg   [15:0] tmp53_reg_1449;
wire   [14:0] tmp61_fu_1065_p2;
reg   [14:0] tmp61_reg_1454;
wire   [15:0] tmp69_fu_1081_p2;
reg   [15:0] tmp69_reg_1459;
wire   [15:0] tmp40_fu_1092_p2;
reg   [15:0] tmp40_reg_1464;
wire    ap_CS_fsm_state3;
wire   [15:0] tmp41_fu_1100_p2;
reg   [15:0] tmp41_reg_1469;
wire   [15:0] tmp43_fu_1109_p2;
reg   [15:0] tmp43_reg_1474;
wire   [15:0] tmp48_fu_1114_p2;
reg   [15:0] tmp48_reg_1479;
wire   [15:0] tmp49_fu_1122_p2;
reg   [15:0] tmp49_reg_1484;
wire   [15:0] tmp51_fu_1131_p2;
reg   [15:0] tmp51_reg_1489;
wire   [15:0] tmp56_fu_1136_p2;
reg   [15:0] tmp56_reg_1494;
wire   [15:0] tmp57_fu_1144_p2;
reg   [15:0] tmp57_reg_1499;
wire   [15:0] tmp59_fu_1157_p2;
reg   [15:0] tmp59_reg_1504;
wire   [15:0] tmp64_fu_1163_p2;
reg   [15:0] tmp64_reg_1509;
wire   [15:0] tmp65_fu_1171_p2;
reg   [15:0] tmp65_reg_1514;
wire   [15:0] tmp67_fu_1181_p2;
reg   [15:0] tmp67_reg_1519;
reg   [15:0] ap_port_reg_data_1_V_read;
reg   [15:0] ap_port_reg_data_4_V_read;
reg   [15:0] ap_port_reg_data_6_V_read;
wire  signed [15:0] grp_fu_163_p0;
wire   [4:0] grp_fu_163_p1;
wire  signed [15:0] grp_fu_164_p0;
wire   [5:0] grp_fu_164_p1;
wire  signed [15:0] grp_fu_165_p0;
wire  signed [5:0] grp_fu_165_p1;
wire  signed [15:0] grp_fu_166_p0;
wire   [5:0] grp_fu_166_p1;
wire  signed [15:0] r_V_0_cast_fu_276_p0;
wire  signed [15:0] p_shl39_fu_281_p1;
wire   [20:0] p_shl39_fu_281_p3;
wire   [20:0] r_V_s_fu_289_p2;
wire  signed [15:0] tmp_s_fu_305_p1;
wire   [20:0] r_V_12_0_3_fu_315_p2;
wire  signed [15:0] r_V_2_cast_fu_331_p0;
wire  signed [15:0] p_shl30_fu_336_p1;
wire   [20:0] p_shl30_fu_336_p3;
wire   [20:0] r_V_12_2_fu_344_p2;
wire   [20:0] r_V_12_2_3_fu_360_p2;
wire  signed [15:0] r_V_3_cast5_fu_376_p0;
wire  signed [15:0] r_V_3_cast_fu_380_p0;
wire  signed [15:0] p_shl28_fu_385_p1;
wire   [20:0] p_shl28_fu_385_p3;
wire   [20:0] r_V_12_3_1_fu_393_p2;
wire  signed [15:0] tmp_298_fu_409_p1;
wire   [17:0] tmp_298_fu_409_p3;
wire  signed [18:0] r_V_3_cast5_fu_376_p1;
wire  signed [18:0] p_shl1_fu_417_p1;
wire   [18:0] r_V_12_3_2_fu_421_p2;
wire  signed [15:0] r_V_5_cast4_fu_437_p0;
wire  signed [16:0] r_V_5_cast4_fu_437_p1;
wire   [16:0] r_V_12_5_2_fu_441_p2;
wire  signed [15:0] r_V_7_cast_fu_457_p0;
wire  signed [15:0] p_shl5_fu_462_p1;
wire   [19:0] p_shl5_fu_462_p3;
wire  signed [20:0] p_shl5_cast_fu_470_p1;
wire  signed [15:0] p_shl3_fu_490_p1;
wire   [20:0] p_shl3_fu_490_p3;
wire   [20:0] r_V_12_7_3_fu_498_p2;
wire  signed [15:0] r_V_8_cast_fu_514_p0;
wire  signed [15:0] r_V_8_cast_cast_fu_518_p0;
wire  signed [15:0] p_shl2_fu_522_p1;
wire   [20:0] p_shl2_fu_522_p3;
wire  signed [20:0] r_V_8_cast_fu_514_p1;
wire   [20:0] r_V_12_8_fu_530_p2;
wire   [20:0] r_V_12_8_1_fu_546_p2;
wire  signed [15:0] p_shl_fu_562_p1;
wire   [18:0] p_shl_fu_562_p3;
wire  signed [19:0] p_shl_cast_fu_570_p1;
wire  signed [19:0] r_V_8_cast_cast_fu_518_p1;
wire   [19:0] r_V_12_8_2_fu_574_p2;
wire  signed [15:0] tmp_362_fu_590_p1;
wire   [20:0] grp_fu_166_p2;
wire  signed [15:0] r_V_1_cast_fu_613_p0;
wire  signed [15:0] p_shl36_fu_617_p1;
wire   [20:0] p_shl36_fu_617_p3;
wire  signed [20:0] r_V_1_cast_fu_613_p1;
wire   [20:0] r_V_12_1_fu_625_p2;
wire  signed [15:0] p_shl34_fu_641_p1;
wire   [19:0] p_shl34_fu_641_p3;
wire  signed [15:0] p_shl35_fu_653_p1;
wire   [17:0] p_shl35_fu_653_p3;
wire  signed [20:0] p_shl34_cast_fu_649_p1;
wire  signed [20:0] p_shl35_cast_fu_661_p1;
wire   [20:0] r_V_12_1_1_fu_665_p2;
wire   [20:0] r_V_12_1_3_fu_681_p2;
wire   [20:0] grp_fu_164_p2;
wire   [20:0] grp_fu_165_p2;
wire  signed [15:0] r_V_4_cast_fu_720_p0;
wire  signed [15:0] p_shl23_fu_724_p1;
wire   [19:0] p_shl23_fu_724_p3;
wire  signed [20:0] p_shl23_cast_fu_732_p1;
wire  signed [15:0] p_shl25_fu_742_p1;
wire   [16:0] p_shl25_fu_742_p3;
wire   [20:0] p_neg23_fu_736_p2;
wire  signed [20:0] p_shl25_cast_fu_750_p1;
wire   [20:0] r_V_12_4_fu_754_p2;
wire  signed [15:0] p_shl22_fu_770_p1;
wire   [20:0] p_shl22_fu_770_p3;
wire  signed [20:0] r_V_4_cast_fu_720_p1;
wire   [20:0] r_V_12_4_1_fu_778_p2;
wire   [20:0] r_V_12_4_2_fu_794_p2;
wire   [20:0] r_V_12_4_3_fu_810_p2;
wire   [19:0] p_shl15_fu_829_p3;
wire   [16:0] p_shl17_fu_840_p3;
wire  signed [20:0] p_shl17_cast_fu_847_p1;
wire  signed [20:0] p_shl15_cast_fu_836_p1;
wire   [20:0] r_V_12_5_fu_851_p2;
wire   [20:0] p_shl13_fu_867_p3;
wire   [20:0] r_V_12_5_1_fu_874_p2;
wire   [18:0] p_shl12_fu_893_p3;
wire  signed [19:0] p_shl12_cast_fu_900_p1;
wire  signed [19:0] r_V_5_cast_cast1_fu_826_p1;
wire   [19:0] r_V_12_5_3_fu_904_p2;
wire   [12:0] tmp_359_fu_920_p4;
wire   [17:0] p_shl11_fu_942_p3;
wire  signed [20:0] p_shl11_cast_fu_950_p1;
wire   [20:0] p_shl9_fu_934_p3;
wire   [20:0] r_V_12_6_1_fu_954_p2;
wire   [20:0] r_V_12_6_2_fu_970_p2;
wire   [16:0] p_shl6_fu_986_p3;
wire  signed [20:0] p_shl6_cast_fu_993_p1;
wire   [20:0] r_V_12_7_fu_997_p2;
wire   [20:0] grp_fu_163_p2;
wire  signed [13:0] p_cast73_fu_930_p1;
wire   [13:0] tmp46_fu_1025_p2;
wire  signed [15:0] tmp46_cast_fu_1031_p1;
wire  signed [12:0] p_cast80_fu_600_p1;
wire   [12:0] tmp54_fu_1040_p2;
wire  signed [15:0] tmp54_cast_fu_1046_p1;
wire  signed [12:0] p_cast74_fu_890_p1;
wire   [12:0] tmp62_fu_1055_p2;
wire  signed [14:0] tmp62_cast_fu_1061_p1;
wire  signed [14:0] p_cast78_fu_717_p1;
wire  signed [14:0] p_cast_fu_1022_p1;
wire   [14:0] tmp70_fu_1071_p2;
wire  signed [15:0] tmp70_cast_fu_1077_p1;
wire   [15:0] tmp42_fu_1096_p2;
wire   [15:0] tmp44_fu_1105_p2;
wire   [15:0] tmp50_fu_1118_p2;
wire   [15:0] tmp52_fu_1127_p2;
wire   [15:0] tmp58_fu_1140_p2;
wire  signed [15:0] tmp_361_fu_1089_p1;
wire  signed [15:0] tmp61_cast_fu_1154_p1;
wire   [15:0] tmp60_fu_1149_p2;
wire   [15:0] tmp66_fu_1167_p2;
wire  signed [15:0] tmp_358_fu_1086_p1;
wire   [15:0] tmp68_fu_1176_p2;
wire    ap_CS_fsm_state4;
wire   [15:0] tmp_fu_1186_p2;
wire   [15:0] tmp47_fu_1195_p2;
wire   [15:0] tmp55_fu_1204_p2;
wire   [15:0] tmp63_fu_1213_p2;
wire   [15:0] res_0_V_write_assign_fu_1190_p2;
wire   [15:0] acc_1_V_fu_1199_p2;
wire   [15:0] acc_2_V_fu_1208_p2;
wire   [15:0] acc_3_V_fu_1217_p2;
reg    grp_fu_163_ce;
reg    grp_fu_164_ce;
reg    grp_fu_165_ce;
reg    grp_fu_166_ce;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

materials_net_mul_16s_5ns_21_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 21 ))
materials_net_mul_16s_5ns_21_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_163_p0),
    .din1(grp_fu_163_p1),
    .ce(grp_fu_163_ce),
    .dout(grp_fu_163_p2)
);

materials_net_mul_16s_6ns_21_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
materials_net_mul_16s_6ns_21_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_164_p0),
    .din1(grp_fu_164_p1),
    .ce(grp_fu_164_ce),
    .dout(grp_fu_164_p2)
);

materials_net_mul_16s_6s_21_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
materials_net_mul_16s_6s_21_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_165_p0),
    .din1(grp_fu_165_p1),
    .ce(grp_fu_165_ce),
    .dout(grp_fu_165_p2)
);

materials_net_mul_16s_6ns_21_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
materials_net_mul_16s_6ns_21_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_166_p0),
    .din1(grp_fu_166_p1),
    .ce(grp_fu_166_ce),
    .dout(grp_fu_166_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_port_reg_data_1_V_read <= data_1_V_read;
        ap_port_reg_data_4_V_read <= data_4_V_read;
        ap_port_reg_data_6_V_read <= data_6_V_read;
        data_5_V_read11_reg_1251 <= data_5_V_read;
        data_7_V_read13_reg_1246 <= data_7_V_read;
        p_neg_reg_1322[20 : 4] <= p_neg_fu_474_p2[20 : 4];
        tmp_109_reg_1265 <= {{r_V_s_fu_289_p2[20:5]}};
        tmp_314_0_3_reg_1275 <= {{r_V_12_0_3_fu_315_p2[20:5]}};
        tmp_314_2_3_reg_1291 <= {{r_V_12_2_3_fu_360_p2[20:5]}};
        tmp_314_2_reg_1285 <= {{r_V_12_2_fu_344_p2[20:5]}};
        tmp_314_3_1_reg_1301 <= {{r_V_12_3_1_fu_393_p2[20:5]}};
        tmp_314_7_2_reg_1327 <= {{p_neg_fu_474_p2[20:5]}};
        tmp_314_7_3_reg_1332 <= {{r_V_12_7_3_fu_498_p2[20:5]}};
        tmp_314_8_1_reg_1342 <= {{r_V_12_8_1_fu_546_p2[20:5]}};
        tmp_314_8_reg_1337 <= {{r_V_12_8_fu_530_p2[20:5]}};
        tmp_355_reg_1307 <= {{r_V_12_3_2_fu_421_p2[18:5]}};
        tmp_356_reg_1312 <= {{r_V_12_5_2_fu_441_p2[16:5]}};
        tmp_360_reg_1347 <= {{r_V_12_8_2_fu_574_p2[19:5]}};
        tmp_362_reg_1352 <= {{tmp_362_fu_590_p1[15:2]}};
        tmp_s_reg_1270 <= {{tmp_s_fu_305_p1[15:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp40_reg_1464 <= tmp40_fu_1092_p2;
        tmp41_reg_1469 <= tmp41_fu_1100_p2;
        tmp43_reg_1474 <= tmp43_fu_1109_p2;
        tmp48_reg_1479 <= tmp48_fu_1114_p2;
        tmp49_reg_1484 <= tmp49_fu_1122_p2;
        tmp51_reg_1489 <= tmp51_fu_1131_p2;
        tmp56_reg_1494 <= tmp56_fu_1136_p2;
        tmp57_reg_1499 <= tmp57_fu_1144_p2;
        tmp59_reg_1504 <= tmp59_fu_1157_p2;
        tmp64_reg_1509 <= tmp64_fu_1163_p2;
        tmp65_reg_1514 <= tmp65_fu_1171_p2;
        tmp67_reg_1519 <= tmp67_fu_1181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp45_reg_1444 <= tmp45_fu_1035_p2;
        tmp53_reg_1449 <= tmp53_fu_1050_p2;
        tmp61_reg_1454 <= tmp61_fu_1065_p2;
        tmp69_reg_1459 <= tmp69_fu_1081_p2;
        tmp_314_0_2_reg_1357 <= {{grp_fu_166_p2[20:5]}};
        tmp_314_1_1_reg_1368 <= {{r_V_12_1_1_fu_665_p2[20:5]}};
        tmp_314_1_3_reg_1373 <= {{r_V_12_1_3_fu_681_p2[20:5]}};
        tmp_314_1_reg_1362 <= {{r_V_12_1_fu_625_p2[20:5]}};
        tmp_314_2_1_reg_1378 <= {{grp_fu_164_p2[20:5]}};
        tmp_314_3_reg_1383 <= {{grp_fu_165_p2[20:5]}};
        tmp_314_4_1_reg_1393 <= {{r_V_12_4_1_fu_778_p2[20:5]}};
        tmp_314_4_2_reg_1398 <= {{r_V_12_4_2_fu_794_p2[20:5]}};
        tmp_314_4_3_reg_1403 <= {{r_V_12_4_3_fu_810_p2[20:5]}};
        tmp_314_4_reg_1388 <= {{r_V_12_4_fu_754_p2[20:5]}};
        tmp_314_5_1_reg_1413 <= {{r_V_12_5_1_fu_874_p2[20:5]}};
        tmp_314_5_reg_1408 <= {{r_V_12_5_fu_851_p2[20:5]}};
        tmp_314_6_1_reg_1423 <= {{r_V_12_6_1_fu_954_p2[20:5]}};
        tmp_314_6_2_reg_1428 <= {{r_V_12_6_2_fu_970_p2[20:5]}};
        tmp_314_7_1_reg_1439 <= {{grp_fu_163_p2[20:5]}};
        tmp_314_7_reg_1434 <= {{r_V_12_7_fu_997_p2[20:5]}};
        tmp_357_reg_1418 <= {{r_V_12_5_3_fu_904_p2[19:5]}};
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state4)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))))) begin
        grp_fu_163_ce = 1'b1;
    end else begin
        grp_fu_163_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))))) begin
        grp_fu_164_ce = 1'b1;
    end else begin
        grp_fu_164_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))))) begin
        grp_fu_165_ce = 1'b1;
    end else begin
        grp_fu_165_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))))) begin
        grp_fu_166_ce = 1'b1;
    end else begin
        grp_fu_166_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_1_V_fu_1199_p2 = (tmp51_reg_1489 + tmp47_fu_1195_p2);

assign acc_2_V_fu_1208_p2 = (tmp59_reg_1504 + tmp55_fu_1204_p2);

assign acc_3_V_fu_1217_p2 = (tmp67_reg_1519 + tmp63_fu_1213_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_return_0 = res_0_V_write_assign_fu_1190_p2;

assign ap_return_1 = acc_1_V_fu_1199_p2;

assign ap_return_2 = acc_2_V_fu_1208_p2;

assign ap_return_3 = acc_3_V_fu_1217_p2;

assign grp_fu_163_p0 = r_V_7_cast_fu_457_p1;

assign grp_fu_163_p1 = 21'd13;

assign grp_fu_164_p0 = r_V_2_cast_fu_331_p1;

assign grp_fu_164_p1 = 21'd25;

assign grp_fu_165_p0 = r_V_3_cast_fu_380_p1;

assign grp_fu_165_p1 = 21'd2097123;

assign grp_fu_166_p0 = r_V_0_cast_fu_276_p1;

assign grp_fu_166_p1 = 21'd21;

assign p_cast73_fu_930_p1 = $signed(tmp_359_fu_920_p4);

assign p_cast74_fu_890_p1 = $signed(tmp_356_reg_1312);

assign p_cast78_fu_717_p1 = $signed(tmp_355_reg_1307);

assign p_cast80_fu_600_p1 = $signed(tmp_s_reg_1270);

assign p_cast_fu_1022_p1 = $signed(tmp_362_reg_1352);

assign p_neg23_fu_736_p2 = ($signed(21'd0) - $signed(p_shl23_cast_fu_732_p1));

assign p_neg_fu_474_p2 = ($signed(21'd0) - $signed(p_shl5_cast_fu_470_p1));

assign p_shl11_cast_fu_950_p1 = $signed(p_shl11_fu_942_p3);

assign p_shl11_fu_942_p3 = {{ap_port_reg_data_6_V_read}, {2'd0}};

assign p_shl12_cast_fu_900_p1 = $signed(p_shl12_fu_893_p3);

assign p_shl12_fu_893_p3 = {{data_5_V_read11_reg_1251}, {3'd0}};

assign p_shl13_fu_867_p3 = {{data_5_V_read11_reg_1251}, {5'd0}};

assign p_shl15_cast_fu_836_p1 = $signed(p_shl15_fu_829_p3);

assign p_shl15_fu_829_p3 = {{data_5_V_read11_reg_1251}, {4'd0}};

assign p_shl17_cast_fu_847_p1 = $signed(p_shl17_fu_840_p3);

assign p_shl17_fu_840_p3 = {{data_5_V_read11_reg_1251}, {1'd0}};

assign p_shl1_fu_417_p1 = $signed(tmp_298_fu_409_p3);

assign p_shl22_fu_770_p1 = ap_port_reg_data_4_V_read;

assign p_shl22_fu_770_p3 = {{p_shl22_fu_770_p1}, {5'd0}};

assign p_shl23_cast_fu_732_p1 = $signed(p_shl23_fu_724_p3);

assign p_shl23_fu_724_p1 = ap_port_reg_data_4_V_read;

assign p_shl23_fu_724_p3 = {{p_shl23_fu_724_p1}, {4'd0}};

assign p_shl25_cast_fu_750_p1 = $signed(p_shl25_fu_742_p3);

assign p_shl25_fu_742_p1 = ap_port_reg_data_4_V_read;

assign p_shl25_fu_742_p3 = {{p_shl25_fu_742_p1}, {1'd0}};

assign p_shl28_fu_385_p1 = data_3_V_read;

assign p_shl28_fu_385_p3 = {{p_shl28_fu_385_p1}, {5'd0}};

assign p_shl2_fu_522_p1 = data_8_V_read;

assign p_shl2_fu_522_p3 = {{p_shl2_fu_522_p1}, {5'd0}};

assign p_shl30_fu_336_p1 = data_2_V_read;

assign p_shl30_fu_336_p3 = {{p_shl30_fu_336_p1}, {5'd0}};

assign p_shl34_cast_fu_649_p1 = $signed(p_shl34_fu_641_p3);

assign p_shl34_fu_641_p1 = ap_port_reg_data_1_V_read;

assign p_shl34_fu_641_p3 = {{p_shl34_fu_641_p1}, {4'd0}};

assign p_shl35_cast_fu_661_p1 = $signed(p_shl35_fu_653_p3);

assign p_shl35_fu_653_p1 = ap_port_reg_data_1_V_read;

assign p_shl35_fu_653_p3 = {{p_shl35_fu_653_p1}, {2'd0}};

assign p_shl36_fu_617_p1 = ap_port_reg_data_1_V_read;

assign p_shl36_fu_617_p3 = {{p_shl36_fu_617_p1}, {5'd0}};

assign p_shl39_fu_281_p1 = data_0_V_read;

assign p_shl39_fu_281_p3 = {{p_shl39_fu_281_p1}, {5'd0}};

assign p_shl3_fu_490_p1 = data_7_V_read;

assign p_shl3_fu_490_p3 = {{p_shl3_fu_490_p1}, {5'd0}};

assign p_shl5_cast_fu_470_p1 = $signed(p_shl5_fu_462_p3);

assign p_shl5_fu_462_p1 = data_7_V_read;

assign p_shl5_fu_462_p3 = {{p_shl5_fu_462_p1}, {4'd0}};

assign p_shl6_cast_fu_993_p1 = $signed(p_shl6_fu_986_p3);

assign p_shl6_fu_986_p3 = {{data_7_V_read13_reg_1246}, {1'd0}};

assign p_shl9_fu_934_p3 = {{ap_port_reg_data_6_V_read}, {5'd0}};

assign p_shl_cast_fu_570_p1 = $signed(p_shl_fu_562_p3);

assign p_shl_fu_562_p1 = data_8_V_read;

assign p_shl_fu_562_p3 = {{p_shl_fu_562_p1}, {3'd0}};

assign r_V_0_cast_fu_276_p0 = data_0_V_read;

assign r_V_0_cast_fu_276_p1 = r_V_0_cast_fu_276_p0;

assign r_V_12_0_3_fu_315_p2 = ($signed(r_V_0_cast_fu_276_p1) - $signed(p_shl39_fu_281_p3));

assign r_V_12_1_1_fu_665_p2 = ($signed(p_shl34_cast_fu_649_p1) + $signed(p_shl35_cast_fu_661_p1));

assign r_V_12_1_3_fu_681_p2 = ($signed(p_shl34_cast_fu_649_p1) - $signed(p_shl35_cast_fu_661_p1));

assign r_V_12_1_fu_625_p2 = ($signed(p_shl36_fu_617_p3) - $signed(r_V_1_cast_fu_613_p1));

assign r_V_12_2_3_fu_360_p2 = ($signed(p_shl30_fu_336_p3) - $signed(r_V_2_cast_fu_331_p1));

assign r_V_12_2_fu_344_p2 = (21'd0 - p_shl30_fu_336_p3);

assign r_V_12_3_1_fu_393_p2 = ($signed(p_shl28_fu_385_p3) - $signed(r_V_3_cast_fu_380_p1));

assign r_V_12_3_2_fu_421_p2 = ($signed(r_V_3_cast5_fu_376_p1) - $signed(p_shl1_fu_417_p1));

assign r_V_12_4_1_fu_778_p2 = ($signed(p_shl22_fu_770_p3) - $signed(r_V_4_cast_fu_720_p1));

assign r_V_12_4_2_fu_794_p2 = (21'd0 - p_shl22_fu_770_p3);

assign r_V_12_4_3_fu_810_p2 = ($signed(p_shl23_cast_fu_732_p1) - $signed(p_shl25_cast_fu_750_p1));

assign r_V_12_4_fu_754_p2 = ($signed(p_neg23_fu_736_p2) - $signed(p_shl25_cast_fu_750_p1));

assign r_V_12_5_1_fu_874_p2 = (21'd0 - p_shl13_fu_867_p3);

assign r_V_12_5_2_fu_441_p2 = ($signed(17'd0) - $signed(r_V_5_cast4_fu_437_p1));

assign r_V_12_5_3_fu_904_p2 = ($signed(p_shl12_cast_fu_900_p1) + $signed(r_V_5_cast_cast1_fu_826_p1));

assign r_V_12_5_fu_851_p2 = ($signed(p_shl17_cast_fu_847_p1) - $signed(p_shl15_cast_fu_836_p1));

assign r_V_12_6_1_fu_954_p2 = ($signed(p_shl11_cast_fu_950_p1) - $signed(p_shl9_fu_934_p3));

assign r_V_12_6_2_fu_970_p2 = (21'd0 - p_shl9_fu_934_p3);

assign r_V_12_7_3_fu_498_p2 = ($signed(p_shl3_fu_490_p3) - $signed(r_V_7_cast_fu_457_p1));

assign r_V_12_7_fu_997_p2 = ($signed(p_neg_reg_1322) - $signed(p_shl6_cast_fu_993_p1));

assign r_V_12_8_1_fu_546_p2 = (21'd0 - p_shl2_fu_522_p3);

assign r_V_12_8_2_fu_574_p2 = ($signed(p_shl_cast_fu_570_p1) + $signed(r_V_8_cast_cast_fu_518_p1));

assign r_V_12_8_fu_530_p2 = ($signed(p_shl2_fu_522_p3) - $signed(r_V_8_cast_fu_514_p1));

assign r_V_1_cast_fu_613_p0 = ap_port_reg_data_1_V_read;

assign r_V_1_cast_fu_613_p1 = r_V_1_cast_fu_613_p0;

assign r_V_2_cast_fu_331_p0 = data_2_V_read;

assign r_V_2_cast_fu_331_p1 = r_V_2_cast_fu_331_p0;

assign r_V_3_cast5_fu_376_p0 = data_3_V_read;

assign r_V_3_cast5_fu_376_p1 = r_V_3_cast5_fu_376_p0;

assign r_V_3_cast_fu_380_p0 = data_3_V_read;

assign r_V_3_cast_fu_380_p1 = r_V_3_cast_fu_380_p0;

assign r_V_4_cast_fu_720_p0 = ap_port_reg_data_4_V_read;

assign r_V_4_cast_fu_720_p1 = r_V_4_cast_fu_720_p0;

assign r_V_5_cast4_fu_437_p0 = data_5_V_read;

assign r_V_5_cast4_fu_437_p1 = r_V_5_cast4_fu_437_p0;

assign r_V_5_cast_cast1_fu_826_p1 = data_5_V_read11_reg_1251;

assign r_V_7_cast_fu_457_p0 = data_7_V_read;

assign r_V_7_cast_fu_457_p1 = r_V_7_cast_fu_457_p0;

assign r_V_8_cast_cast_fu_518_p0 = data_8_V_read;

assign r_V_8_cast_cast_fu_518_p1 = r_V_8_cast_cast_fu_518_p0;

assign r_V_8_cast_fu_514_p0 = data_8_V_read;

assign r_V_8_cast_fu_514_p1 = r_V_8_cast_fu_514_p0;

assign r_V_s_fu_289_p2 = ($signed(p_shl39_fu_281_p3) - $signed(r_V_0_cast_fu_276_p1));

assign res_0_V_write_assign_fu_1190_p2 = (tmp43_reg_1474 + tmp_fu_1186_p2);

assign tmp40_fu_1092_p2 = (tmp_109_reg_1265 + tmp_314_1_reg_1362);

assign tmp41_fu_1100_p2 = (tmp42_fu_1096_p2 + tmp_314_2_reg_1285);

assign tmp42_fu_1096_p2 = (tmp_314_3_reg_1383 + tmp_314_4_reg_1388);

assign tmp43_fu_1109_p2 = (tmp45_reg_1444 + tmp44_fu_1105_p2);

assign tmp44_fu_1105_p2 = (tmp_314_5_reg_1408 + tmp_314_7_reg_1434);

assign tmp45_fu_1035_p2 = ($signed(tmp46_cast_fu_1031_p1) + $signed(tmp_314_8_reg_1337));

assign tmp46_cast_fu_1031_p1 = $signed(tmp46_fu_1025_p2);

assign tmp46_fu_1025_p2 = ($signed(p_cast73_fu_930_p1) + $signed(14'd16192));

assign tmp47_fu_1195_p2 = (tmp49_reg_1484 + tmp48_reg_1479);

assign tmp48_fu_1114_p2 = (tmp_314_1_1_reg_1368 + tmp_314_2_1_reg_1378);

assign tmp49_fu_1122_p2 = (tmp50_fu_1118_p2 + tmp_314_3_1_reg_1301);

assign tmp50_fu_1118_p2 = (tmp_314_4_1_reg_1393 + tmp_314_5_1_reg_1413);

assign tmp51_fu_1131_p2 = (tmp53_reg_1449 + tmp52_fu_1127_p2);

assign tmp52_fu_1127_p2 = (tmp_314_6_1_reg_1423 + tmp_314_7_1_reg_1439);

assign tmp53_fu_1050_p2 = ($signed(tmp54_cast_fu_1046_p1) + $signed(tmp_314_8_1_reg_1342));

assign tmp54_cast_fu_1046_p1 = $signed(tmp54_fu_1040_p2);

assign tmp54_fu_1040_p2 = ($signed(p_cast80_fu_600_p1) + $signed(13'd7808));

assign tmp55_fu_1204_p2 = (tmp57_reg_1499 + tmp56_reg_1494);

assign tmp56_fu_1136_p2 = (tmp_314_0_2_reg_1357 + tmp_314_1_reg_1362);

assign tmp57_fu_1144_p2 = (tmp58_fu_1140_p2 + tmp_314_2_reg_1285);

assign tmp58_fu_1140_p2 = (tmp_314_4_2_reg_1398 + tmp_314_6_2_reg_1428);

assign tmp59_fu_1157_p2 = ($signed(tmp61_cast_fu_1154_p1) + $signed(tmp60_fu_1149_p2));

assign tmp60_fu_1149_p2 = ($signed(tmp_314_7_2_reg_1327) + $signed(tmp_361_fu_1089_p1));

assign tmp61_cast_fu_1154_p1 = $signed(tmp61_reg_1454);

assign tmp61_fu_1065_p2 = ($signed(tmp62_cast_fu_1061_p1) + $signed(p_cast78_fu_717_p1));

assign tmp62_cast_fu_1061_p1 = $signed(tmp62_fu_1055_p2);

assign tmp62_fu_1055_p2 = ($signed(p_cast74_fu_890_p1) + $signed(13'd832));

assign tmp63_fu_1213_p2 = (tmp65_reg_1514 + tmp64_reg_1509);

assign tmp64_fu_1163_p2 = (tmp_314_0_3_reg_1275 + tmp_314_1_3_reg_1373);

assign tmp65_fu_1171_p2 = (tmp66_fu_1167_p2 + tmp_314_2_3_reg_1291);

assign tmp66_fu_1167_p2 = (tmp_314_3_1_reg_1301 + tmp_314_4_3_reg_1403);

assign tmp67_fu_1181_p2 = (tmp69_reg_1459 + tmp68_fu_1176_p2);

assign tmp68_fu_1176_p2 = ($signed(tmp_358_fu_1086_p1) + $signed(tmp_314_6_2_reg_1428));

assign tmp69_fu_1081_p2 = ($signed(tmp70_cast_fu_1077_p1) + $signed(tmp_314_7_3_reg_1332));

assign tmp70_cast_fu_1077_p1 = $signed(tmp70_fu_1071_p2);

assign tmp70_fu_1071_p2 = ($signed(p_cast_fu_1022_p1) + $signed(15'd32064));

assign tmp_298_fu_409_p1 = data_3_V_read;

assign tmp_298_fu_409_p3 = {{tmp_298_fu_409_p1}, {2'd0}};

assign tmp_358_fu_1086_p1 = $signed(tmp_357_reg_1418);

assign tmp_359_fu_920_p4 = {{ap_port_reg_data_6_V_read[15:3]}};

assign tmp_361_fu_1089_p1 = $signed(tmp_360_reg_1347);

assign tmp_362_fu_590_p1 = data_8_V_read;

assign tmp_fu_1186_p2 = (tmp41_reg_1469 + tmp40_reg_1464);

assign tmp_s_fu_305_p1 = data_0_V_read;

always @ (posedge ap_clk) begin
    p_neg_reg_1322[3:0] <= 4'b0000;
end

endmodule //dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0
